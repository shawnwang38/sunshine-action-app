{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from \"../../dateutils\";\nimport { getDefaultLocale } from \"../../services\";\nimport { xdateToData } from \"../../interface\";\nimport { SELECT_DATE_SLOT } from \"../../testIDs\";\nimport BasicDay from \"./basic\";\nimport PeriodDay from \"./period\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction areEqual(prevProps, nextProps) {\n  var prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n  var nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n  var didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n    return value !== nextPropsWithoutMarkDates[key];\n  });\n  var isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n  return !didPropsChange && isMarkingEqual;\n}\n\nvar Day = React.memo(function (props) {\n  var date = props.date,\n      marking = props.marking,\n      dayComponent = props.dayComponent,\n      markingType = props.markingType;\n\n  var _date = date ? new XDate(date) : undefined;\n\n  var _isToday = isToday(_date);\n\n  var markingAccessibilityLabel = useMemo(function () {\n    var label = '';\n\n    if (marking) {\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n    }\n\n    return label;\n  }, [marking]);\n  var getAccessibilityLabel = useMemo(function () {\n    var today = getDefaultLocale().today || 'today';\n    var formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n    return (_isToday ? today : '') + \" \" + (_date == null ? void 0 : _date.toString(formatAccessibilityLabel)) + \" \" + markingAccessibilityLabel;\n  }, [_date, marking, _isToday]);\n  var Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n  var dayComponentProps = dayComponent ? {\n    date: xdateToData(date ? new XDate(date) : new XDate())\n  } : undefined;\n  return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n    accessibilityLabel: getAccessibilityLabel,\n    testID: SELECT_DATE_SLOT + \"-\" + date\n  }, dayComponentProps), {}, {\n    children: formatNumbers(_date == null ? void 0 : _date.getDate())\n  }));\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';","map":{"version":3,"names":["omit","isEqual","some","XDate","React","useMemo","formatNumbers","isToday","getDefaultLocale","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","areEqual","prevProps","nextProps","prevPropsWithoutMarkDates","nextPropsWithoutMarkDates","didPropsChange","value","key","isMarkingEqual","marking","Day","memo","props","date","dayComponent","markingType","_date","undefined","_isToday","markingAccessibilityLabel","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","getAccessibilityLabel","today","formatAccessibilityLabel","toString","Component","dayComponentProps","getDate","displayName"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/calendar/day/index.js"],"sourcesContent":["import omit from 'lodash/omit';\nimport isEqual from 'lodash/isEqual';\nimport some from 'lodash/some';\nimport XDate from 'xdate';\nimport React, { useMemo } from 'react';\nimport { formatNumbers, isToday } from '../../dateutils';\nimport { getDefaultLocale } from '../../services';\nimport { xdateToData } from '../../interface';\n// @ts-expect-error\nimport { SELECT_DATE_SLOT } from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\nfunction areEqual(prevProps, nextProps) {\n    const prevPropsWithoutMarkDates = omit(prevProps, 'marking');\n    const nextPropsWithoutMarkDates = omit(nextProps, 'marking');\n    const didPropsChange = some(prevPropsWithoutMarkDates, function (value, key) {\n        //@ts-expect-error\n        return value !== nextPropsWithoutMarkDates[key];\n    });\n    const isMarkingEqual = isEqual(prevProps.marking, nextProps.marking);\n    return !didPropsChange && isMarkingEqual;\n}\nconst Day = React.memo((props) => {\n    const { date, marking, dayComponent, markingType } = props;\n    const _date = date ? new XDate(date) : undefined;\n    const _isToday = isToday(_date);\n    const markingAccessibilityLabel = useMemo(() => {\n        let label = '';\n        if (marking) {\n            if (marking.accessibilityLabel) {\n                return marking.accessibilityLabel;\n            }\n            if (marking.selected) {\n                label += 'selected ';\n                if (!marking.marked) {\n                    label += 'You have no entries for this day ';\n                }\n            }\n            if (marking.marked) {\n                label += 'You have entries for this day ';\n            }\n            if (marking.startingDay) {\n                label += 'period start ';\n            }\n            if (marking.endingDay) {\n                label += 'period end ';\n            }\n            if (marking.disabled || marking.disableTouchEvent) {\n                label += 'disabled ';\n            }\n        }\n        return label;\n    }, [marking]);\n    const getAccessibilityLabel = useMemo(() => {\n        const today = getDefaultLocale().today || 'today';\n        const formatAccessibilityLabel = getDefaultLocale().formatAccessibilityLabel || 'dddd d MMMM yyyy';\n        return `${_isToday ? today : ''} ${_date?.toString(formatAccessibilityLabel)} ${markingAccessibilityLabel}`;\n    }, [_date, marking, _isToday]);\n    const Component = dayComponent || (markingType === 'period' ? PeriodDay : BasicDay);\n    const dayComponentProps = dayComponent ? { date: xdateToData(date ? new XDate(date) : new XDate()) } : undefined;\n    return (\n    //@ts-expect-error\n    <Component {...props} accessibilityLabel={getAccessibilityLabel} testID={`${SELECT_DATE_SLOT}-${date}`} {...dayComponentProps}>\n      {formatNumbers(_date?.getDate())}\n    </Component>);\n}, areEqual);\nexport default Day;\nDay.displayName = 'Day';\n"],"mappings":";;;;;;AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,OAAxB;AACA,SAASC,gBAAT;AACA,SAASC,WAAT;AAEA,SAASC,gBAAT;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;;;AACA,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,SAA7B,EAAwC;EACpC,IAAMC,yBAAyB,GAAGhB,IAAI,CAACc,SAAD,EAAY,SAAZ,CAAtC;EACA,IAAMG,yBAAyB,GAAGjB,IAAI,CAACe,SAAD,EAAY,SAAZ,CAAtC;EACA,IAAMG,cAAc,GAAGhB,IAAI,CAACc,yBAAD,EAA4B,UAAUG,KAAV,EAAiBC,GAAjB,EAAsB;IAEzE,OAAOD,KAAK,KAAKF,yBAAyB,CAACG,GAAD,CAA1C;EACH,CAH0B,CAA3B;EAIA,IAAMC,cAAc,GAAGpB,OAAO,CAACa,SAAS,CAACQ,OAAX,EAAoBP,SAAS,CAACO,OAA9B,CAA9B;EACA,OAAO,CAACJ,cAAD,IAAmBG,cAA1B;AACH;;AACD,IAAME,GAAG,GAAGnB,KAAK,CAACoB,IAAN,CAAW,UAACC,KAAD,EAAW;EAC9B,IAAQC,IAAR,GAAqDD,KAArD,CAAQC,IAAR;EAAA,IAAcJ,OAAd,GAAqDG,KAArD,CAAcH,OAAd;EAAA,IAAuBK,YAAvB,GAAqDF,KAArD,CAAuBE,YAAvB;EAAA,IAAqCC,WAArC,GAAqDH,KAArD,CAAqCG,WAArC;;EACA,IAAMC,KAAK,GAAGH,IAAI,GAAG,IAAIvB,KAAJ,CAAUuB,IAAV,CAAH,GAAqBI,SAAvC;;EACA,IAAMC,QAAQ,GAAGxB,OAAO,CAACsB,KAAD,CAAxB;;EACA,IAAMG,yBAAyB,GAAG3B,OAAO,CAAC,YAAM;IAC5C,IAAI4B,KAAK,GAAG,EAAZ;;IACA,IAAIX,OAAJ,EAAa;MACT,IAAIA,OAAO,CAACY,kBAAZ,EAAgC;QAC5B,OAAOZ,OAAO,CAACY,kBAAf;MACH;;MACD,IAAIZ,OAAO,CAACa,QAAZ,EAAsB;QAClBF,KAAK,IAAI,WAAT;;QACA,IAAI,CAACX,OAAO,CAACc,MAAb,EAAqB;UACjBH,KAAK,IAAI,mCAAT;QACH;MACJ;;MACD,IAAIX,OAAO,CAACc,MAAZ,EAAoB;QAChBH,KAAK,IAAI,gCAAT;MACH;;MACD,IAAIX,OAAO,CAACe,WAAZ,EAAyB;QACrBJ,KAAK,IAAI,eAAT;MACH;;MACD,IAAIX,OAAO,CAACgB,SAAZ,EAAuB;QACnBL,KAAK,IAAI,aAAT;MACH;;MACD,IAAIX,OAAO,CAACiB,QAAR,IAAoBjB,OAAO,CAACkB,iBAAhC,EAAmD;QAC/CP,KAAK,IAAI,WAAT;MACH;IACJ;;IACD,OAAOA,KAAP;EACH,CA1BwC,EA0BtC,CAACX,OAAD,CA1BsC,CAAzC;EA2BA,IAAMmB,qBAAqB,GAAGpC,OAAO,CAAC,YAAM;IACxC,IAAMqC,KAAK,GAAGlC,gBAAgB,GAAGkC,KAAnB,IAA4B,OAA1C;IACA,IAAMC,wBAAwB,GAAGnC,gBAAgB,GAAGmC,wBAAnB,IAA+C,kBAAhF;IACA,QAAUZ,QAAQ,GAAGW,KAAH,GAAW,EAA7B,WAAmCb,KAAnC,oBAAmCA,KAAK,CAAEe,QAAP,CAAgBD,wBAAhB,CAAnC,UAAgFX,yBAAhF;EACH,CAJoC,EAIlC,CAACH,KAAD,EAAQP,OAAR,EAAiBS,QAAjB,CAJkC,CAArC;EAKA,IAAMc,SAAS,GAAGlB,YAAY,KAAKC,WAAW,KAAK,QAAhB,GAA2BhB,SAA3B,GAAuCD,QAA5C,CAA9B;EACA,IAAMmC,iBAAiB,GAAGnB,YAAY,GAAG;IAAED,IAAI,EAAEjB,WAAW,CAACiB,IAAI,GAAG,IAAIvB,KAAJ,CAAUuB,IAAV,CAAH,GAAqB,IAAIvB,KAAJ,EAA1B;EAAnB,CAAH,GAAiE2B,SAAvG;EACA,OAEA,KAAC,SAAD,gDAAeL,KAAf;IAAsB,kBAAkB,EAAEgB,qBAA1C;IAAiE,MAAM,EAAK/B,gBAAL,SAAyBgB;EAAhG,GAA4GoB,iBAA5G;IAAA,UACGxC,aAAa,CAACuB,KAAD,oBAACA,KAAK,CAAEkB,OAAP,EAAD;EADhB,GAFA;AAKH,CA3CW,EA2CTlC,QA3CS,CAAZ;AA4CA,eAAeU,GAAf;AACAA,GAAG,CAACyB,WAAJ,GAAkB,KAAlB"},"metadata":{},"sourceType":"module"}