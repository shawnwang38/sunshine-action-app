{"ast":null,"code":"import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport constants from \"../commons/constants\";\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from \"./helpers/presenter\";\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from \"./Packer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar dimensionWidth = constants.screenWidth;\nvar EVENT_DIFF = 20;\n\nvar TimelineHours = function TimelineHours(props) {\n  var format24h = props.format24h,\n      _props$start = props.start,\n      start = _props$start === void 0 ? 0 : _props$start,\n      _props$end = props.end,\n      end = _props$end === void 0 ? 24 : _props$end,\n      date = props.date,\n      unavailableHours = props.unavailableHours,\n      unavailableHoursColor = props.unavailableHoursColor,\n      styles = props.styles,\n      onBackgroundLongPress = props.onBackgroundLongPress,\n      onBackgroundLongPressOut = props.onBackgroundLongPressOut,\n      width = props.width,\n      _props$numberOfDays = props.numberOfDays,\n      numberOfDays = _props$numberOfDays === void 0 ? 1 : _props$numberOfDays,\n      _props$timelineLeftIn = props.timelineLeftInset,\n      timelineLeftInset = _props$timelineLeftIn === void 0 ? 0 : _props$timelineLeftIn;\n  var lastLongPressEventTime = useRef();\n  var offset = HOUR_BLOCK_HEIGHT;\n  var unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, {\n    dayStart: start,\n    dayEnd: end\n  });\n  var hours = useMemo(function () {\n    return range(start, end + 1).map(function (i) {\n      var timeText;\n\n      if (i === start) {\n        timeText = '';\n      } else if (i < 12) {\n        timeText = !format24h ? i + \" AM\" : i + \":00\";\n      } else if (i === 12) {\n        timeText = !format24h ? i + \" PM\" : i + \":00\";\n      } else if (i === 24) {\n        timeText = !format24h ? '12 AM' : '23:59';\n      } else {\n        timeText = !format24h ? i - 12 + \" PM\" : i + \":00\";\n      }\n\n      return {\n        timeText: timeText,\n        time: i\n      };\n    });\n  }, [start, end, format24h]);\n  var handleBackgroundPress = useCallback(function (event) {\n    var yPosition = event.nativeEvent.locationY;\n    var xPosition = event.nativeEvent.locationX;\n\n    var _calcTimeByPosition = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT),\n        hour = _calcTimeByPosition.hour,\n        minutes = _calcTimeByPosition.minutes;\n\n    var dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n    lastLongPressEventTime.current = {\n      hour: hour,\n      minutes: minutes,\n      date: dateByPosition\n    };\n    var timeString = buildTimeString(hour, minutes, dateByPosition);\n    onBackgroundLongPress == null ? void 0 : onBackgroundLongPress(timeString, lastLongPressEventTime.current);\n  }, [onBackgroundLongPress, date]);\n  var handlePressOut = useCallback(function () {\n    if (lastLongPressEventTime.current) {\n      var _lastLongPressEventTi = lastLongPressEventTime.current,\n          hour = _lastLongPressEventTi.hour,\n          minutes = _lastLongPressEventTi.minutes,\n          _date = _lastLongPressEventTi.date;\n      var timeString = buildTimeString(hour, minutes, _date);\n      onBackgroundLongPressOut == null ? void 0 : onBackgroundLongPressOut(timeString, lastLongPressEventTime.current);\n      lastLongPressEventTime.current = undefined;\n    }\n  }, [onBackgroundLongPressOut, date]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onLongPress: handleBackgroundPress,\n      onPressOut: handlePressOut,\n      children: _jsx(View, {\n        style: StyleSheet.absoluteFillObject\n      })\n    }), unavailableHoursBlocks.map(function (block) {\n      return _jsx(View, {\n        style: [styles.unavailableHoursBlock, block, unavailableHoursColor ? {\n          backgroundColor: unavailableHoursColor\n        } : undefined, {\n          left: timelineLeftInset\n        }]\n      });\n    }), hours.map(function (_ref, index) {\n      var timeText = _ref.timeText,\n          time = _ref.time;\n      return _jsxs(React.Fragment, {\n        children: [_jsx(Text, {\n          style: [styles.timeLabel, {\n            top: offset * index - 6,\n            width: timelineLeftInset - 16\n          }],\n          children: timeText\n        }, \"timeLabel\" + time), time === start ? null : _jsx(View, {\n          style: [styles.line, {\n            top: offset * index,\n            width: dimensionWidth - EVENT_DIFF,\n            left: timelineLeftInset - 16\n          }]\n        }, \"line\" + time), _jsx(View, {\n          style: [styles.line, {\n            top: offset * (index + 0.5),\n            width: dimensionWidth - EVENT_DIFF,\n            left: timelineLeftInset - 16\n          }]\n        }, \"lineHalf\" + time)]\n      }, time);\n    }), times(numberOfDays, function (index) {\n      return _jsx(View, {\n        style: [styles.verticalLine, {\n          right: (index + 1) * width / numberOfDays\n        }]\n      });\n    })]\n  });\n};\n\nexport default React.memo(TimelineHours);","map":{"version":3,"names":["range","times","React","useCallback","useMemo","useRef","constants","buildTimeString","calcTimeByPosition","calcDateByPosition","buildUnavailableHoursBlocks","HOUR_BLOCK_HEIGHT","dimensionWidth","screenWidth","EVENT_DIFF","TimelineHours","props","format24h","start","end","date","unavailableHours","unavailableHoursColor","styles","onBackgroundLongPress","onBackgroundLongPressOut","width","numberOfDays","timelineLeftInset","lastLongPressEventTime","offset","unavailableHoursBlocks","dayStart","dayEnd","hours","map","i","timeText","time","handleBackgroundPress","event","yPosition","nativeEvent","locationY","xPosition","locationX","hour","minutes","dateByPosition","current","timeString","handlePressOut","undefined","StyleSheet","absoluteFillObject","block","unavailableHoursBlock","backgroundColor","left","index","timeLabel","top","line","verticalLine","right","memo"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/timeline/TimelineHours.js"],"sourcesContent":["import range from 'lodash/range';\nimport times from 'lodash/times';\nimport React, { useCallback, useMemo, useRef } from 'react';\nimport { View, Text, TouchableWithoutFeedback, StyleSheet } from 'react-native';\nimport constants from '../commons/constants';\nimport { buildTimeString, calcTimeByPosition, calcDateByPosition } from './helpers/presenter';\nimport { buildUnavailableHoursBlocks, HOUR_BLOCK_HEIGHT } from './Packer';\nconst dimensionWidth = constants.screenWidth;\nconst EVENT_DIFF = 20;\nconst TimelineHours = (props) => {\n    const { format24h, start = 0, end = 24, date, unavailableHours, unavailableHoursColor, styles, onBackgroundLongPress, onBackgroundLongPressOut, width, numberOfDays = 1, timelineLeftInset = 0 } = props;\n    const lastLongPressEventTime = useRef();\n    // const offset = this.calendarHeight / (end - start);\n    const offset = HOUR_BLOCK_HEIGHT;\n    const unavailableHoursBlocks = buildUnavailableHoursBlocks(unavailableHours, { dayStart: start, dayEnd: end });\n    const hours = useMemo(() => {\n        return range(start, end + 1).map(i => {\n            let timeText;\n            if (i === start) {\n                timeText = '';\n            }\n            else if (i < 12) {\n                timeText = !format24h ? `${i} AM` : `${i}:00`;\n            }\n            else if (i === 12) {\n                timeText = !format24h ? `${i} PM` : `${i}:00`;\n            }\n            else if (i === 24) {\n                timeText = !format24h ? '12 AM' : '23:59';\n            }\n            else {\n                timeText = !format24h ? `${i - 12} PM` : `${i}:00`;\n            }\n            return { timeText, time: i };\n        });\n    }, [start, end, format24h]);\n    const handleBackgroundPress = useCallback(event => {\n        const yPosition = event.nativeEvent.locationY;\n        const xPosition = event.nativeEvent.locationX;\n        const { hour, minutes } = calcTimeByPosition(yPosition, HOUR_BLOCK_HEIGHT);\n        const dateByPosition = calcDateByPosition(xPosition, timelineLeftInset, numberOfDays, date);\n        lastLongPressEventTime.current = { hour, minutes, date: dateByPosition };\n        const timeString = buildTimeString(hour, minutes, dateByPosition);\n        onBackgroundLongPress?.(timeString, lastLongPressEventTime.current);\n    }, [onBackgroundLongPress, date]);\n    const handlePressOut = useCallback(() => {\n        if (lastLongPressEventTime.current) {\n            const { hour, minutes, date } = lastLongPressEventTime.current;\n            const timeString = buildTimeString(hour, minutes, date);\n            onBackgroundLongPressOut?.(timeString, lastLongPressEventTime.current);\n            lastLongPressEventTime.current = undefined;\n        }\n    }, [onBackgroundLongPressOut, date]);\n    return (<>\n      <TouchableWithoutFeedback onLongPress={handleBackgroundPress} onPressOut={handlePressOut}>\n        <View style={StyleSheet.absoluteFillObject}/>\n      </TouchableWithoutFeedback>\n      {unavailableHoursBlocks.map(block => (<View style={[\n                styles.unavailableHoursBlock,\n                block,\n                unavailableHoursColor ? { backgroundColor: unavailableHoursColor } : undefined,\n                { left: timelineLeftInset }\n            ]}></View>))}\n\n      {hours.map(({ timeText, time }, index) => {\n            return (<React.Fragment key={time}>\n            <Text key={`timeLabel${time}`} style={[styles.timeLabel, { top: offset * index - 6, width: timelineLeftInset - 16 }]}>\n              {timeText}\n            </Text>\n            {time === start ? null : (<View key={`line${time}`} style={[styles.line, { top: offset * index, width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>)}\n            {<View key={`lineHalf${time}`} style={[styles.line, { top: offset * (index + 0.5), width: dimensionWidth - EVENT_DIFF, left: timelineLeftInset - 16 }]}/>}\n          </React.Fragment>);\n        })}\n      {times(numberOfDays, (index) => <View style={[styles.verticalLine, { right: (index + 1) * width / numberOfDays }]}/>)}\n    </>);\n};\nexport default React.memo(TimelineHours);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}