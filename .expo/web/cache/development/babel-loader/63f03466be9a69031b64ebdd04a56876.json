{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport XDate from 'xdate';\nimport React from 'react';\nimport { toMarkingFormat } from \"../../interface\";\nimport constants from \"../../commons/constants\";\nimport { generateDay } from \"../../dateutils\";\n\nvar commons = require(\"../commons\");\n\nvar updateSources = commons.UpdateSources;\nvar NUMBER_OF_PAGES = 2;\n\nvar Presenter = function () {\n  function Presenter() {\n    var _this = this;\n\n    _classCallCheck(this, Presenter);\n\n    this._applyAndroidRtlFix = constants.isAndroid && constants.isRTL;\n    this._firstAndroidRTLScrollIgnored = !this._applyAndroidRtlFix;\n    this.list = React.createRef();\n\n    this.scrollToIndex = function (animated) {\n      var _this$list, _this$list$current;\n\n      (_this$list = _this.list) == null ? void 0 : (_this$list$current = _this$list.current) == null ? void 0 : _this$list$current.scrollToIndex({\n        animated: animated,\n        index: NUMBER_OF_PAGES\n      });\n    };\n\n    this.onDayPress = function (context, value) {\n      context.setDate == null ? void 0 : context.setDate(value.dateString, updateSources.DAY_PRESS);\n    };\n\n    this.onScroll = function (_ref) {\n      var context = _ref.context,\n          updateState = _ref.updateState,\n          x = _ref.x,\n          page = _ref.page,\n          items = _ref.items,\n          width = _ref.width;\n\n      if (!_this._firstAndroidRTLScrollIgnored) {\n        _this._firstAndroidRTLScrollIgnored = true;\n        return;\n      }\n\n      x = _this._getX(x, items == null ? void 0 : items.length, width);\n\n      var newPage = _this._getNewPage(x, width);\n\n      if (_this._shouldUpdateState(page, newPage)) {\n        context.setDate == null ? void 0 : context.setDate(items[newPage], updateSources.WEEK_SCROLL);\n\n        var data = _this._getItemsForPage(newPage, items);\n\n        updateState(data, newPage);\n      }\n    };\n\n    this.onMomentumScrollEnd = function (_ref2) {\n      var items = _ref2.items,\n          props = _ref2.props,\n          page = _ref2.page,\n          updateItems = _ref2.updateItems;\n\n      if (_this._isFirstPage(page) || _this._isLastPage(page, items)) {\n        _this.scrollToIndex(false);\n\n        var newWeekArray = _this.getDatesArray(props);\n\n        var updatedItems;\n\n        if (_this._isLastPage(page, items)) {\n          updatedItems = _this._mergeArraysFromEnd(items, newWeekArray);\n        } else {\n          updatedItems = _this._mergeArraysFromTop(items, newWeekArray);\n        }\n\n        updateItems(updatedItems);\n      }\n    };\n\n    this.shouldComponentUpdate = function (context, prevContext) {\n      var date = context.date,\n          updateSource = context.updateSource,\n          numberOfDays = context.numberOfDays;\n      return date !== prevContext.date && updateSource !== updateSources.WEEK_SCROLL || numberOfDays !== prevContext.numberOfDays;\n    };\n\n    this.getDatesArray = function (args) {\n      var array = [];\n\n      for (var index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n        var d = _this.getDate(args, index);\n\n        array.push(d);\n      }\n\n      return array;\n    };\n\n    this._shouldUpdateState = function (page, newPage) {\n      return page !== newPage;\n    };\n\n    this._getX = function (x, itemsCount, containerWidth) {\n      if (_this._applyAndroidRtlFix) {\n        var numberOfPages = itemsCount - 1;\n        var overallWidth = numberOfPages * containerWidth;\n        return overallWidth - x;\n      }\n\n      return x;\n    };\n\n    this._getNewPage = function (x, containerWidth) {\n      return Math.round(x / containerWidth);\n    };\n\n    this._isFirstPage = function (page) {\n      return page === 0;\n    };\n\n    this._isLastPage = function (page, items) {\n      return page === items.length - 1;\n    };\n\n    this._getNextPageItems = function (items) {\n      return items.map(function (_, i) {\n        var index = i <= NUMBER_OF_PAGES ? i + NUMBER_OF_PAGES : i;\n        return items[index];\n      });\n    };\n\n    this._getFirstPageItems = function (items) {\n      return items.map(function (_, i) {\n        var index = i >= NUMBER_OF_PAGES ? i - NUMBER_OF_PAGES : i;\n        return items[index];\n      });\n    };\n\n    this._mergeArraysFromEnd = function (items, newArray) {\n      for (var i = NUMBER_OF_PAGES + 1; i < items.length; i++) {\n        items[i] = newArray[i];\n      }\n\n      return items;\n    };\n\n    this._mergeArraysFromTop = function (items, newArray) {\n      for (var i = 0; i < NUMBER_OF_PAGES; i++) {\n        items[i] = newArray[i];\n      }\n\n      return items;\n    };\n\n    this._getItemsForPage = function (page, items) {\n      if (_this._isLastPage(page, items)) {\n        return _this._getNextPageItems(items);\n      } else if (_this._isFirstPage(page)) {\n        return _this._getFirstPageItems(items);\n      }\n\n      return items;\n    };\n  }\n\n  _createClass(Presenter, [{\n    key: \"getDate\",\n    value: function getDate(_ref3, weekIndex) {\n      var current = _ref3.current,\n          context = _ref3.context,\n          _ref3$firstDay = _ref3.firstDay,\n          firstDay = _ref3$firstDay === void 0 ? 0 : _ref3$firstDay;\n      var d = new XDate(current || context.date);\n      var numberOfDays = context.numberOfDays;\n      var dayOfTheWeek = d.getDay();\n\n      if (dayOfTheWeek < firstDay && firstDay > 0) {\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      var newDate;\n\n      if (numberOfDays > 1) {\n        newDate = generateDay(toMarkingFormat(d), weekIndex * numberOfDays);\n      } else {\n        var dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n        newDate = dd.addWeeks(weekIndex);\n      }\n\n      return toMarkingFormat(newDate);\n    }\n  }]);\n\n  return Presenter;\n}();\n\nexport default Presenter;","map":{"version":3,"names":["XDate","React","toMarkingFormat","constants","generateDay","commons","require","updateSources","UpdateSources","NUMBER_OF_PAGES","Presenter","_applyAndroidRtlFix","isAndroid","isRTL","_firstAndroidRTLScrollIgnored","list","createRef","scrollToIndex","animated","current","index","onDayPress","context","value","setDate","dateString","DAY_PRESS","onScroll","updateState","x","page","items","width","_getX","length","newPage","_getNewPage","_shouldUpdateState","WEEK_SCROLL","data","_getItemsForPage","onMomentumScrollEnd","props","updateItems","_isFirstPage","_isLastPage","newWeekArray","getDatesArray","updatedItems","_mergeArraysFromEnd","_mergeArraysFromTop","shouldComponentUpdate","prevContext","date","updateSource","numberOfDays","args","array","d","getDate","push","itemsCount","containerWidth","numberOfPages","overallWidth","Math","round","_getNextPageItems","map","_","i","_getFirstPageItems","newArray","weekIndex","firstDay","dayOfTheWeek","getDay","newDate","dd","addDays","addWeeks"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/expandableCalendar/WeekCalendar/presenter.js"],"sourcesContent":["import XDate from 'xdate';\nimport React from 'react';\nimport { toMarkingFormat } from '../../interface';\nimport constants from '../../commons/constants';\nimport { generateDay } from '../../dateutils';\nconst commons = require('../commons');\nconst updateSources = commons.UpdateSources;\n// must be a positive number\nconst NUMBER_OF_PAGES = 2;\nclass Presenter {\n    _applyAndroidRtlFix = constants.isAndroid && constants.isRTL;\n    // On Android+RTL there's an initial scroll that cause issues\n    _firstAndroidRTLScrollIgnored = !this._applyAndroidRtlFix;\n    list = React.createRef();\n    scrollToIndex = (animated) => {\n        this.list?.current?.scrollToIndex({ animated, index: NUMBER_OF_PAGES });\n    };\n    // Events\n    onDayPress = (context, value) => {\n        context.setDate?.(value.dateString, updateSources.DAY_PRESS);\n    };\n    onScroll = ({ context, updateState, x, page, items, width }) => {\n        if (!this._firstAndroidRTLScrollIgnored) {\n            this._firstAndroidRTLScrollIgnored = true;\n            return;\n        }\n        x = this._getX(x, items?.length, width);\n        const newPage = this._getNewPage(x, width);\n        if (this._shouldUpdateState(page, newPage)) {\n            context.setDate?.(items[newPage], updateSources.WEEK_SCROLL);\n            const data = this._getItemsForPage(newPage, items);\n            updateState(data, newPage);\n        }\n    };\n    onMomentumScrollEnd = ({ items, props, page, updateItems }) => {\n        if (this._isFirstPage(page) || this._isLastPage(page, items)) {\n            this.scrollToIndex(false);\n            const newWeekArray = this.getDatesArray(props);\n            let updatedItems;\n            if (this._isLastPage(page, items)) {\n                updatedItems = this._mergeArraysFromEnd(items, newWeekArray);\n            }\n            else {\n                updatedItems = this._mergeArraysFromTop(items, newWeekArray);\n            }\n            updateItems(updatedItems);\n        }\n    };\n    shouldComponentUpdate = (context, prevContext) => {\n        const { date, updateSource, numberOfDays } = context;\n        return ((date !== prevContext.date && updateSource !== updateSources.WEEK_SCROLL) ||\n            numberOfDays !== prevContext.numberOfDays);\n    };\n    getDate({ current, context, firstDay = 0 }, weekIndex) {\n        const d = new XDate(current || context.date);\n        const numberOfDays = context.numberOfDays;\n        // get the first day of the week as date (for the on scroll mark)\n        let dayOfTheWeek = d.getDay();\n        if (dayOfTheWeek < firstDay && firstDay > 0) {\n            dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n        let newDate;\n        if (numberOfDays > 1) {\n            newDate = generateDay(toMarkingFormat(d), weekIndex * numberOfDays);\n        }\n        else {\n            // leave the current date in the visible week as is\n            const dd = weekIndex === 0 ? d : d.addDays(firstDay - dayOfTheWeek);\n            newDate = dd.addWeeks(weekIndex);\n        }\n        return toMarkingFormat(newDate);\n    }\n    getDatesArray = (args) => {\n        const array = [];\n        for (let index = -NUMBER_OF_PAGES; index <= NUMBER_OF_PAGES; index++) {\n            const d = this.getDate(args, index);\n            array.push(d);\n        }\n        return array;\n    };\n    _shouldUpdateState = (page, newPage) => {\n        return page !== newPage;\n    };\n    _getX = (x, itemsCount, containerWidth) => {\n        if (this._applyAndroidRtlFix) {\n            const numberOfPages = itemsCount - 1;\n            const overallWidth = numberOfPages * containerWidth;\n            return overallWidth - x;\n        }\n        return x;\n    };\n    _getNewPage = (x, containerWidth) => {\n        return Math.round(x / containerWidth);\n    };\n    _isFirstPage = (page) => {\n        return page === 0;\n    };\n    _isLastPage = (page, items) => {\n        return page === items.length - 1;\n    };\n    _getNextPageItems = (items) => {\n        return items.map((_, i) => {\n            const index = i <= NUMBER_OF_PAGES ? i + NUMBER_OF_PAGES : i;\n            return items[index];\n        });\n    };\n    _getFirstPageItems = (items) => {\n        return items.map((_, i) => {\n            const index = i >= NUMBER_OF_PAGES ? i - NUMBER_OF_PAGES : i;\n            return items[index];\n        });\n    };\n    _mergeArraysFromEnd = (items, newArray) => {\n        for (let i = NUMBER_OF_PAGES + 1; i < items.length; i++) {\n            items[i] = newArray[i];\n        }\n        return items;\n    };\n    _mergeArraysFromTop = (items, newArray) => {\n        for (let i = 0; i < NUMBER_OF_PAGES; i++) {\n            items[i] = newArray[i];\n        }\n        return items;\n    };\n    _getItemsForPage = (page, items) => {\n        if (this._isLastPage(page, items)) {\n            return this._getNextPageItems(items);\n        }\n        else if (this._isFirstPage(page)) {\n            return this._getFirstPageItems(items);\n        }\n        return items;\n    };\n}\nexport default Presenter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}