{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport constants from \"../commons/constants\";\nimport { toMarkingFormat } from \"../interface\";\nimport { extractHeaderProps } from \"../componentUpdater\";\nimport Calendar from \"../calendar\";\nimport CalendarHeader from \"../calendar/header\";\nimport InfiniteList from \"../infinite-list\";\nimport styleConstructor from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NUMBER_OF_PAGES = 50;\nvar CALENDAR_HEIGHT = 360;\n\nvar CalendarList = function CalendarList(props) {\n  var initialDate = props.initialDate,\n      horizontal = props.horizontal,\n      _props$scrollRange = props.scrollRange,\n      scrollRange = _props$scrollRange === void 0 ? NUMBER_OF_PAGES : _props$scrollRange,\n      staticHeader = props.staticHeader,\n      scrollViewProps = props.scrollViewProps,\n      calendarProps = props.calendarProps,\n      testID = props.testID;\n  var style = useRef(styleConstructor(calendarProps == null ? void 0 : calendarProps.theme));\n  var list = useRef();\n\n  var _useState = useState(getDatesArray(initialDate, scrollRange)),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState(scrollRange),\n      _useState4 = _slicedToArray(_useState3, 2),\n      positionIndex = _useState4[0],\n      setPositionIndex = _useState4[1];\n\n  var _useState5 = useState(initialDate || items[scrollRange]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentMonth = _useState6[0],\n      setCurrentMonth = _useState6[1];\n\n  var shouldRenderStaticHeader = staticHeader && horizontal;\n  var headerProps = extractHeaderProps(props);\n  var staticHeaderStyle = useMemo(function () {\n    return [style.current.staticHeader, calendarProps == null ? void 0 : calendarProps.headerStyle];\n  }, [calendarProps == null ? void 0 : calendarProps.headerStyle]);\n  useEffect(function () {\n    scrollToMonth(currentMonth);\n  }, [currentMonth]);\n  var getMonthIndex = useCallback(function (month) {\n    if (!month) {\n      return -1;\n    }\n\n    return items.findIndex(function (item) {\n      return item.includes(month.toString('yyyy-MM'));\n    });\n  }, [items]);\n  var scrollToMonth = useCallback(function (month) {\n    if (month) {\n      var index = getMonthIndex(new XDate(month));\n\n      if (index !== -1) {\n        var _list$current;\n\n        var shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n        (_list$current = list.current) == null ? void 0 : _list$current.scrollToOffset == null ? void 0 : _list$current.scrollToOffset(index * constants.screenWidth, 0, shouldAnimate);\n      }\n    }\n  }, [getMonthIndex]);\n  var updateMonth = useCallback(function (count, month) {\n    if (month) {\n      var next = new XDate(month).addMonths(count, true);\n      var nextNext = new XDate(month).addMonths(count * 2, true);\n      var nextNextIndex = getMonthIndex(nextNext);\n\n      if (nextNextIndex !== -1) {\n        setCurrentMonth(toMarkingFormat(next));\n      }\n    }\n  }, [getMonthIndex]);\n  var scrollToNextMonth = useCallback(function (method, month) {\n    if (calendarProps != null && calendarProps.onPressArrowLeft) {\n      calendarProps == null ? void 0 : calendarProps.onPressArrowLeft == null ? void 0 : calendarProps.onPressArrowLeft(method, month);\n    } else {\n      updateMonth(1, month);\n    }\n  }, [updateMonth]);\n  var scrollToPreviousMonth = useCallback(function (method, month) {\n    if (calendarProps != null && calendarProps.onPressArrowRight) {\n      calendarProps == null ? void 0 : calendarProps.onPressArrowRight == null ? void 0 : calendarProps.onPressArrowRight(method, month);\n    } else {\n      updateMonth(-1, month);\n    }\n  }, [updateMonth]);\n  var onPageChange = useCallback(function (pageIndex, _, info) {\n    if (shouldRenderStaticHeader && info.scrolledByUser) {\n      setCurrentMonth(items[pageIndex]);\n    }\n  }, [items]);\n\n  var renderStaticHeader = function renderStaticHeader() {\n    if (shouldRenderStaticHeader) {\n      return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n        month: new XDate(currentMonth),\n        onPressArrowRight: scrollToNextMonth,\n        onPressArrowLeft: scrollToPreviousMonth,\n        style: staticHeaderStyle,\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants',\n        testID: 'static-header'\n      }));\n    }\n  };\n\n  var reloadPages = useCallback(function (pageIndex) {\n    horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n  }, [items]);\n\n  var replaceItems = function replaceItems(index) {\n    var newItems = getDatesArray(items[index], scrollRange);\n    setItems(newItems);\n  };\n\n  var addItems = function addItems(index) {\n    var array = _toConsumableArray(items);\n\n    var startingDate = items[index];\n    var shouldAppend = index > scrollRange;\n\n    if (startingDate) {\n      if (shouldAppend) {\n        for (var i = 2; i <= scrollRange; i++) {\n          var newDate = getDate(startingDate, i);\n          array.push(newDate);\n        }\n      } else {\n        for (var _i = -1; _i > -scrollRange; _i--) {\n          var _newDate = getDate(startingDate, _i);\n\n          array.unshift(_newDate);\n        }\n      }\n\n      setPositionIndex(shouldAppend ? index : scrollRange - 1);\n      setItems(array);\n    }\n  };\n\n  var listContainerStyle = useMemo(function () {\n    return [style.current.flatListContainer, {\n      flex: horizontal ? undefined : 1\n    }];\n  }, [style, horizontal]);\n  var scrollProps = useMemo(function () {\n    return _objectSpread(_objectSpread({}, scrollViewProps), {}, {\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false\n    });\n  }, [scrollViewProps]);\n  var renderItem = useCallback(function (_type, item) {\n    return _jsx(Calendar, _objectSpread(_objectSpread(_objectSpread({}, calendarProps), headerProps), {}, {\n      initialDate: item,\n      disableMonthChange: true,\n      hideArrows: !horizontal,\n      onPressArrowRight: scrollToNextMonth,\n      onPressArrowLeft: scrollToPreviousMonth,\n      hideExtraDays: (calendarProps == null ? void 0 : calendarProps.hideExtraDays) || true,\n      style: [style.current.calendar, calendarProps == null ? void 0 : calendarProps.style],\n      headerStyle: horizontal ? calendarProps == null ? void 0 : calendarProps.headerStyle : undefined,\n      testID: testID + \"_\" + item\n    }));\n  }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n  return _jsxs(View, {\n    style: listContainerStyle,\n    children: [_jsx(InfiniteList, {\n      ref: list,\n      data: items,\n      renderItem: renderItem,\n      reloadPages: reloadPages,\n      onReachNearEdgeThreshold: Math.round(NUMBER_OF_PAGES * 0.4),\n      extendedState: calendarProps == null ? void 0 : calendarProps.markedDates,\n      isHorizontal: horizontal,\n      style: style.current.container,\n      initialPageIndex: scrollRange,\n      positionIndex: positionIndex,\n      pageHeight: CALENDAR_HEIGHT,\n      pageWidth: constants.screenWidth,\n      onPageChange: onPageChange,\n      scrollViewProps: scrollProps\n    }, \"calendar-list\"), renderStaticHeader()]\n  });\n};\n\nexport default CalendarList;\n\nfunction getDate(date, index) {\n  var d = new XDate(date);\n  d.addMonths(index, true);\n  d.setDate(1);\n  return toMarkingFormat(d);\n}\n\nfunction getDatesArray(date) {\n  var numberOfPages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NUMBER_OF_PAGES;\n  var d = date || new XDate().toString();\n  var array = [];\n\n  for (var index = -numberOfPages; index <= numberOfPages; index++) {\n    var newDate = getDate(d, index);\n    array.push(newDate);\n  }\n\n  return array;\n}","map":{"version":3,"names":["XDate","React","useCallback","useEffect","useRef","useState","useMemo","constants","toMarkingFormat","extractHeaderProps","Calendar","CalendarHeader","InfiniteList","styleConstructor","NUMBER_OF_PAGES","CALENDAR_HEIGHT","CalendarList","props","initialDate","horizontal","scrollRange","staticHeader","scrollViewProps","calendarProps","testID","style","theme","list","getDatesArray","items","setItems","positionIndex","setPositionIndex","currentMonth","setCurrentMonth","shouldRenderStaticHeader","headerProps","staticHeaderStyle","current","headerStyle","scrollToMonth","getMonthIndex","month","findIndex","item","includes","toString","index","shouldAnimate","isAndroid","scrollToOffset","screenWidth","updateMonth","count","next","addMonths","nextNext","nextNextIndex","scrollToNextMonth","method","onPressArrowLeft","scrollToPreviousMonth","onPressArrowRight","onPageChange","pageIndex","_","info","scrolledByUser","renderStaticHeader","reloadPages","replaceItems","addItems","newItems","array","startingDate","shouldAppend","i","newDate","getDate","push","unshift","listContainerStyle","flatListContainer","flex","undefined","scrollProps","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","renderItem","_type","hideExtraDays","calendar","Math","round","markedDates","container","date","d","setDate","numberOfPages"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/calendar-list/new.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useCallback, useEffect, useRef, useState, useMemo } from 'react';\nimport { View } from 'react-native';\nimport constants from '../commons/constants';\nimport { toMarkingFormat } from '../interface';\nimport { extractHeaderProps } from '../componentUpdater';\nimport Calendar from '../calendar';\nimport CalendarHeader from '../calendar/header';\nimport InfiniteList from '../infinite-list';\nimport styleConstructor from './style';\nconst NUMBER_OF_PAGES = 50;\nconst CALENDAR_HEIGHT = 360;\nconst CalendarList = (props) => {\n    const { initialDate, horizontal, scrollRange = NUMBER_OF_PAGES, staticHeader, scrollViewProps, calendarProps, testID } = props;\n    const style = useRef(styleConstructor(calendarProps?.theme));\n    const list = useRef();\n    const [items, setItems] = useState(getDatesArray(initialDate, scrollRange));\n    const [positionIndex, setPositionIndex] = useState(scrollRange);\n    /** Static Header */\n    const [currentMonth, setCurrentMonth] = useState(initialDate || items[scrollRange]);\n    const shouldRenderStaticHeader = staticHeader && horizontal;\n    const headerProps = extractHeaderProps(props);\n    const staticHeaderStyle = useMemo(() => {\n        return [style.current.staticHeader, calendarProps?.headerStyle];\n    }, [calendarProps?.headerStyle]);\n    useEffect(() => {\n        scrollToMonth(currentMonth);\n    }, [currentMonth]);\n    const getMonthIndex = useCallback((month) => {\n        if (!month) {\n            return -1;\n        }\n        return items.findIndex(item => item.includes(month.toString('yyyy-MM')));\n    }, [items]);\n    const scrollToMonth = useCallback((month) => {\n        if (month) {\n            const index = getMonthIndex(new XDate(month));\n            if (index !== -1) {\n                const shouldAnimate = constants.isAndroid && !horizontal ? false : true;\n                // @ts-expect-error\n                list.current?.scrollToOffset?.(index * constants.screenWidth, 0, shouldAnimate);\n            }\n        }\n    }, [getMonthIndex]);\n    const updateMonth = useCallback((count, month) => {\n        if (month) {\n            const next = new XDate(month).addMonths(count, true);\n            const nextNext = new XDate(month).addMonths(count * 2, true);\n            const nextNextIndex = getMonthIndex(nextNext);\n            if (nextNextIndex !== -1) {\n                setCurrentMonth(toMarkingFormat(next));\n            }\n        }\n    }, [getMonthIndex]);\n    const scrollToNextMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowLeft) {\n            calendarProps?.onPressArrowLeft?.(method, month);\n        }\n        else {\n            updateMonth(1, month);\n        }\n    }, [updateMonth]);\n    const scrollToPreviousMonth = useCallback((method, month) => {\n        if (calendarProps?.onPressArrowRight) {\n            calendarProps?.onPressArrowRight?.(method, month);\n        }\n        else {\n            updateMonth(-1, month);\n        }\n    }, [updateMonth]);\n    const onPageChange = useCallback((pageIndex, _, info) => {\n        if (shouldRenderStaticHeader && info.scrolledByUser) {\n            setCurrentMonth(items[pageIndex]);\n        }\n    }, [items]);\n    const renderStaticHeader = () => {\n        if (shouldRenderStaticHeader) {\n            return (<CalendarHeader {...headerProps} month={new XDate(currentMonth)} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} style={staticHeaderStyle} accessibilityElementsHidden // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n             testID={'static-header'}/>);\n        }\n    };\n    /** Data */\n    const reloadPages = useCallback(pageIndex => {\n        horizontal ? replaceItems(pageIndex) : addItems(pageIndex);\n    }, [items]);\n    const replaceItems = (index) => {\n        const newItems = getDatesArray(items[index], scrollRange);\n        setItems(newItems);\n    };\n    const addItems = (index) => {\n        const array = [...items];\n        const startingDate = items[index];\n        const shouldAppend = index > scrollRange;\n        if (startingDate) {\n            if (shouldAppend) {\n                for (let i = 2; i <= scrollRange; i++) {\n                    const newDate = getDate(startingDate, i);\n                    array.push(newDate);\n                }\n            }\n            else {\n                for (let i = -1; i > -scrollRange; i--) {\n                    const newDate = getDate(startingDate, i);\n                    array.unshift(newDate);\n                }\n            }\n            setPositionIndex(shouldAppend ? index : scrollRange - 1);\n            setItems(array);\n        }\n    };\n    /** List */\n    const listContainerStyle = useMemo(() => {\n        return [style.current.flatListContainer, { flex: horizontal ? undefined : 1 }];\n    }, [style, horizontal]);\n    const scrollProps = useMemo(() => {\n        return {\n            ...scrollViewProps,\n            showsHorizontalScrollIndicator: false,\n            showsVerticalScrollIndicator: false\n        };\n    }, [scrollViewProps]);\n    const renderItem = useCallback((_type, item) => {\n        return (<Calendar {...calendarProps} {...headerProps} initialDate={item} disableMonthChange hideArrows={!horizontal} onPressArrowRight={scrollToNextMonth} onPressArrowLeft={scrollToPreviousMonth} hideExtraDays={calendarProps?.hideExtraDays || true} style={[style.current.calendar, calendarProps?.style]} headerStyle={horizontal ? calendarProps?.headerStyle : undefined} testID={`${testID}_${item}`}/>);\n    }, [calendarProps, scrollToNextMonth, scrollToPreviousMonth]);\n    return (<View style={listContainerStyle}>\n      <InfiniteList key=\"calendar-list\" ref={list} data={items} renderItem={renderItem} reloadPages={reloadPages} onReachNearEdgeThreshold={Math.round(NUMBER_OF_PAGES * 0.4)} extendedState={calendarProps?.markedDates} isHorizontal={horizontal} style={style.current.container} initialPageIndex={scrollRange} positionIndex={positionIndex} pageHeight={CALENDAR_HEIGHT} pageWidth={constants.screenWidth} onPageChange={onPageChange} scrollViewProps={scrollProps}/>\n      {renderStaticHeader()}\n    </View>);\n};\nexport default CalendarList;\nfunction getDate(date, index) {\n    const d = new XDate(date);\n    d.addMonths(index, true);\n    // if (index !== 0) {\n    d.setDate(1);\n    // }\n    return toMarkingFormat(d);\n}\nfunction getDatesArray(date, numberOfPages = NUMBER_OF_PAGES) {\n    const d = date || new XDate().toString();\n    const array = [];\n    for (let index = -numberOfPages; index <= numberOfPages; index++) {\n        const newDate = getDate(d, index);\n        array.push(newDate);\n    }\n    return array;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}