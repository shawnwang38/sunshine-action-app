{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport XDate from 'xdate';\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { sameMonth } from \"../../dateutils\";\nimport { xdateToData } from \"../../interface\";\nimport { UpdateSources } from \"../commons\";\nimport styleConstructor from \"../style\";\nimport CalendarContext from \"./index\";\nimport { shouldAnimateTodayButton, shouldAnimateOpacity, getButtonIcon, getPositionAnimation, getOpacityAnimation, getTodayDate, getTodayFormatted } from \"./Presenter\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TOP_POSITION = 65;\n\nvar CalendarProvider = function CalendarProvider(props) {\n  var theme = props.theme,\n      date = props.date,\n      onDateChanged = props.onDateChanged,\n      onMonthChange = props.onMonthChange,\n      _props$showTodayButto = props.showTodayButton,\n      showTodayButton = _props$showTodayButto === void 0 ? false : _props$showTodayButto,\n      todayBottomMargin = props.todayBottomMargin,\n      todayButtonStyle = props.todayButtonStyle,\n      propsStyle = props.style,\n      numberOfDays = props.numberOfDays,\n      _props$timelineLeftIn = props.timelineLeftInset,\n      timelineLeftInset = _props$timelineLeftIn === void 0 ? 72 : _props$timelineLeftIn,\n      children = props.children;\n  var style = useRef(styleConstructor(theme));\n  var buttonY = useRef(new Animated.Value(todayBottomMargin ? -todayBottomMargin : -TOP_POSITION));\n  var opacity = useRef(new Animated.Value(1));\n  var today = useRef(getTodayFormatted());\n  var prevDate = useRef(date);\n  var currDate = useRef(date);\n\n  var _useState = useState(date),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  var _useState3 = useState(UpdateSources.CALENDAR_INIT),\n      _useState4 = _slicedToArray(_useState3, 2),\n      updateSource = _useState4[0],\n      setUpdateSource = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisabled = _useState6[0],\n      setIsDisabled = _useState6[1];\n\n  var _useState7 = useState(getButtonIcon(date, showTodayButton)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      buttonIcon = _useState8[0],\n      setButtonIcon = _useState8[1];\n\n  var wrapperStyle = useMemo(function () {\n    return [style.current.contextWrapper, propsStyle];\n  }, [style, propsStyle]);\n  useEffect(function () {\n    if (date) {\n      _setDate(date, UpdateSources.PROP_UPDATE);\n    }\n  }, [date]);\n  useEffect(function () {\n    animateTodayButton(currentDate);\n  }, [todayBottomMargin, currentDate]);\n\n  var _setDate = useCallback(function (date, updateSource) {\n    prevDate.current = currDate.current;\n    currDate.current = date;\n    setCurrentDate(date);\n    setUpdateSource(updateSource);\n    setButtonIcon(getButtonIcon(date, showTodayButton));\n    onDateChanged == null ? void 0 : onDateChanged(date, updateSource);\n\n    if (!sameMonth(new XDate(date), new XDate(date))) {\n      onMonthChange == null ? void 0 : onMonthChange(xdateToData(new XDate(date)), updateSource);\n    }\n  }, [onDateChanged, onMonthChange]);\n\n  var _setDisabled = useCallback(function (disabled) {\n    if (!showTodayButton || disabled === isDisabled) {\n      return;\n    }\n\n    setIsDisabled(disabled);\n    animateOpacity(disabled);\n  }, [showTodayButton, isDisabled]);\n\n  var contextValue = useMemo(function () {\n    return {\n      date: currentDate,\n      prevDate: prevDate.current,\n      updateSource: updateSource,\n      setDate: _setDate,\n      setDisabled: _setDisabled,\n      numberOfDays: numberOfDays,\n      timelineLeftInset: timelineLeftInset\n    };\n  }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n\n  var animateTodayButton = function animateTodayButton(date) {\n    if (shouldAnimateTodayButton(props)) {\n      var animationData = getPositionAnimation(date, todayBottomMargin);\n      Animated.spring(buttonY.current, _objectSpread({}, animationData)).start();\n    }\n  };\n\n  var animateOpacity = function animateOpacity(disabled) {\n    if (shouldAnimateOpacity(props)) {\n      var animationData = getOpacityAnimation(props, disabled);\n      Animated.timing(opacity.current, _objectSpread({}, animationData)).start();\n    }\n  };\n\n  var onTodayPress = useCallback(function () {\n    _setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n  }, [_setDate]);\n\n  var renderTodayButton = function renderTodayButton() {\n    return _jsx(Animated.View, {\n      style: [style.current.todayButtonContainer, {\n        transform: [{\n          translateY: buttonY.current\n        }]\n      }],\n      children: _jsxs(TouchableOpacity, {\n        style: [style.current.todayButton, todayButtonStyle],\n        onPress: onTodayPress,\n        disabled: isDisabled,\n        children: [_jsx(Animated.Image, {\n          style: [style.current.todayButtonImage, {\n            opacity: opacity.current\n          }],\n          source: buttonIcon\n        }), _jsx(Animated.Text, {\n          allowFontScaling: false,\n          style: [style.current.todayButtonText, {\n            opacity: opacity.current\n          }],\n          children: today.current\n        })]\n      })\n    });\n  };\n\n  return _jsxs(CalendarContext.Provider, {\n    value: contextValue,\n    children: [_jsx(View, {\n      style: wrapperStyle,\n      children: children\n    }), showTodayButton && renderTodayButton()]\n  });\n};\n\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';","map":{"version":3,"names":["XDate","React","useEffect","useRef","useState","useCallback","useMemo","sameMonth","xdateToData","UpdateSources","styleConstructor","CalendarContext","shouldAnimateTodayButton","shouldAnimateOpacity","getButtonIcon","getPositionAnimation","getOpacityAnimation","getTodayDate","getTodayFormatted","TOP_POSITION","CalendarProvider","props","theme","date","onDateChanged","onMonthChange","showTodayButton","todayBottomMargin","todayButtonStyle","propsStyle","style","numberOfDays","timelineLeftInset","children","buttonY","Animated","Value","opacity","today","prevDate","currDate","currentDate","setCurrentDate","CALENDAR_INIT","updateSource","setUpdateSource","isDisabled","setIsDisabled","buttonIcon","setButtonIcon","wrapperStyle","current","contextWrapper","_setDate","PROP_UPDATE","animateTodayButton","_setDisabled","disabled","animateOpacity","contextValue","setDate","setDisabled","animationData","spring","start","timing","onTodayPress","TODAY_PRESS","renderTodayButton","todayButtonContainer","transform","translateY","todayButton","todayButtonImage","todayButtonText","displayName"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useEffect, useRef, useState, useCallback, useMemo } from 'react';\nimport { Animated, TouchableOpacity, View } from 'react-native';\nimport { sameMonth } from '../../dateutils';\nimport { xdateToData } from '../../interface';\nimport { UpdateSources } from '../commons';\nimport styleConstructor from '../style';\nimport CalendarContext from './index';\nimport { shouldAnimateTodayButton, shouldAnimateOpacity, getButtonIcon, getPositionAnimation, getOpacityAnimation, getTodayDate, getTodayFormatted } from './Presenter';\nconst TOP_POSITION = 65;\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst CalendarProvider = (props) => {\n    const { theme, date, onDateChanged, onMonthChange, showTodayButton = false, todayBottomMargin, todayButtonStyle, style: propsStyle, numberOfDays, timelineLeftInset = 72, children } = props;\n    const style = useRef(styleConstructor(theme));\n    const buttonY = useRef(new Animated.Value(todayBottomMargin ? -todayBottomMargin : -TOP_POSITION));\n    const opacity = useRef(new Animated.Value(1));\n    const today = useRef(getTodayFormatted());\n    const prevDate = useRef(date);\n    const currDate = useRef(date); // for setDate only to keep prevDate up to date\n    const [currentDate, setCurrentDate] = useState(date);\n    const [updateSource, setUpdateSource] = useState(UpdateSources.CALENDAR_INIT);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [buttonIcon, setButtonIcon] = useState(getButtonIcon(date, showTodayButton));\n    const wrapperStyle = useMemo(() => {\n        return [style.current.contextWrapper, propsStyle];\n    }, [style, propsStyle]);\n    useEffect(() => {\n        if (date) {\n            _setDate(date, UpdateSources.PROP_UPDATE);\n        }\n    }, [date]);\n    useEffect(() => {\n        animateTodayButton(currentDate);\n    }, [todayBottomMargin, currentDate]);\n    /** Context */\n    const _setDate = useCallback((date, updateSource) => {\n        prevDate.current = currDate.current;\n        currDate.current = date;\n        setCurrentDate(date);\n        setUpdateSource(updateSource);\n        setButtonIcon(getButtonIcon(date, showTodayButton));\n        onDateChanged?.(date, updateSource);\n        if (!sameMonth(new XDate(date), new XDate(date))) {\n            onMonthChange?.(xdateToData(new XDate(date)), updateSource);\n        }\n    }, [onDateChanged, onMonthChange]);\n    const _setDisabled = useCallback((disabled) => {\n        if (!showTodayButton || disabled === isDisabled) {\n            return;\n        }\n        setIsDisabled(disabled);\n        animateOpacity(disabled);\n    }, [showTodayButton, isDisabled]);\n    const contextValue = useMemo(() => {\n        return {\n            date: currentDate,\n            prevDate: prevDate.current,\n            updateSource: updateSource,\n            setDate: _setDate,\n            setDisabled: _setDisabled,\n            numberOfDays,\n            timelineLeftInset\n        };\n    }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n    /** Animations */\n    const animateTodayButton = (date) => {\n        if (shouldAnimateTodayButton(props)) {\n            const animationData = getPositionAnimation(date, todayBottomMargin);\n            Animated.spring(buttonY.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    const animateOpacity = (disabled) => {\n        if (shouldAnimateOpacity(props)) {\n            const animationData = getOpacityAnimation(props, disabled);\n            Animated.timing(opacity.current, {\n                ...animationData\n            }).start();\n        }\n    };\n    /** Events */\n    const onTodayPress = useCallback(() => {\n        _setDate(getTodayDate(), UpdateSources.TODAY_PRESS);\n    }, [_setDate]);\n    /** Renders */\n    const renderTodayButton = () => {\n        return (<Animated.View style={[style.current.todayButtonContainer, { transform: [{ translateY: buttonY.current }] }]}>\n        <TouchableOpacity style={[style.current.todayButton, todayButtonStyle]} onPress={onTodayPress} disabled={isDisabled}>\n          <Animated.Image style={[style.current.todayButtonImage, { opacity: opacity.current }]} source={buttonIcon}/>\n          <Animated.Text allowFontScaling={false} style={[style.current.todayButtonText, { opacity: opacity.current }]}>\n            {today.current}\n          </Animated.Text>\n        </TouchableOpacity>\n      </Animated.View>);\n    };\n    return (<CalendarContext.Provider value={contextValue}>\n      <View style={wrapperStyle}>{children}</View>\n      {showTodayButton && renderTodayButton()}\n    </CalendarContext.Provider>);\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}