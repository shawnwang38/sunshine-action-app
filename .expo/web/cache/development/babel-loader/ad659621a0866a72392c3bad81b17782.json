{"ast":null,"code":"import React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport DonateCard from \"../Card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Discover() {\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: {\n      flexShrink: 0\n    },\n    children: _jsx(View, {\n      style: {\n        paddingHorizontal: 20\n      },\n      children: _jsx(Calendar, {\n        initialDate: '2012-03-01',\n        minDate: '2012-05-10',\n        maxDate: '2012-05-30',\n        onDayPress: function onDayPress(day) {\n          console.log('selected day', day);\n        },\n        onDayLongPress: function onDayLongPress(day) {\n          console.log('selected day', day);\n        },\n        monthFormat: 'yyyy MM',\n        onMonthChange: function onMonthChange(month) {\n          console.log('month changed', month);\n        },\n        hideArrows: true,\n        renderArrow: function renderArrow(direction) {\n          return _jsx(Arrow, {});\n        },\n        hideExtraDays: true,\n        disableMonthChange: true,\n        firstDay: 1,\n        hideDayNames: true,\n        showWeekNumbers: true,\n        onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n          return subtractMonth();\n        },\n        onPressArrowRight: function onPressArrowRight(addMonth) {\n          return addMonth();\n        },\n        disableArrowLeft: true,\n        disableArrowRight: true,\n        disableAllTouchEventsForDisabledDays: true,\n        renderHeader: function renderHeader(date) {},\n        enableSwipeMonths: true\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Component","DonateCard","Discover","flexShrink","paddingHorizontal","day","console","log","month","direction","subtractMonth","addMonth","date"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/src/screens/Discover.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, View, ScrollView, Alert, Modal, StyleSheet, Pressable } from \"react-native\";\r\nimport DonateCard from '../Card';\r\n\r\n/* modal was commented out since it's still under construction */\r\n\r\n/*const [modalVisible, setModalVisible] = useState(false);*/\r\n\r\nexport default function Discover() {\r\n    return (\r\n        \r\n        <ScrollView showsVerticalScrollIndicator={false} style={{ flexShrink: 0 }}>\r\n            <View style = {{ paddingHorizontal: 20 }}>\r\n            <Calendar\r\n  // Initially visible month. Default = now\r\n  initialDate={'2012-03-01'}\r\n  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n  minDate={'2012-05-10'}\r\n  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n  maxDate={'2012-05-30'}\r\n  // Handler which gets executed on day press. Default = undefined\r\n  onDayPress={day => {\r\n    console.log('selected day', day);\r\n  }}\r\n  // Handler which gets executed on day long press. Default = undefined\r\n  onDayLongPress={day => {\r\n    console.log('selected day', day);\r\n  }}\r\n  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n  monthFormat={'yyyy MM'}\r\n  // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n  onMonthChange={month => {\r\n    console.log('month changed', month);\r\n  }}\r\n  // Hide month navigation arrows. Default = false\r\n  hideArrows={true}\r\n  // Replace default arrows with custom ones (direction can be 'left' or 'right')\r\n  renderArrow={direction => <Arrow />}\r\n  // Do not show days of other months in month page. Default = false\r\n  hideExtraDays={true}\r\n  // If hideArrows = false and hideExtraDays = false do not switch month when tapping on greyed out\r\n  // day from another month that is visible in calendar page. Default = false\r\n  disableMonthChange={true}\r\n  // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday\r\n  firstDay={1}\r\n  // Hide day names. Default = false\r\n  hideDayNames={true}\r\n  // Show week numbers to the left. Default = false\r\n  showWeekNumbers={true}\r\n  // Handler which gets executed when press arrow icon left. It receive a callback can go back month\r\n  onPressArrowLeft={subtractMonth => subtractMonth()}\r\n  // Handler which gets executed when press arrow icon right. It receive a callback can go next month\r\n  onPressArrowRight={addMonth => addMonth()}\r\n  // Disable left arrow. Default = false\r\n  disableArrowLeft={true}\r\n  // Disable right arrow. Default = false\r\n  disableArrowRight={true}\r\n  // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates\r\n  disableAllTouchEventsForDisabledDays={true}\r\n  // Replace default month and year title with custom one. the function receive a date as parameter\r\n  renderHeader={date => {\r\n    /*Return JSX*/\r\n  }}\r\n  // Enable the option to swipe between months. Default = false\r\n  enableSwipeMonths={true}\r\n/>\r\n            \r\n            </View>\r\n        </ScrollView>\r\n        \r\n    );\r\n}\r\n\r\n/*\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 22\r\n    },\r\n    modalView: {\r\n      margin: 20,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 20,\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#000\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4,\r\n      elevation: 5\r\n    },\r\n    button: {\r\n      borderRadius: 20,\r\n      padding: 10,\r\n      elevation: 2\r\n    },\r\n    buttonOpen: {\r\n      backgroundColor: \"#F194FF\",\r\n    },\r\n    buttonClose: {\r\n      backgroundColor: \"#2196F3\",\r\n    },\r\n    textStyle: {\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n      textAlign: \"center\"\r\n    },\r\n    modalText: {\r\n      marginBottom: 15,\r\n      textAlign: \"center\"\r\n    }\r\n  });\r\n*/\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAEA,OAAOC,UAAP;;AAMA,eAAe,SAASC,QAAT,GAAoB;EAC/B,OAEI,KAAC,UAAD;IAAY,4BAA4B,EAAE,KAA1C;IAAiD,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAd,CAAxD;IAAA,UACI,KAAC,IAAD;MAAM,KAAK,EAAI;QAAEC,iBAAiB,EAAE;MAArB,CAAf;MAAA,UACA,KAAC,QAAD;QAEV,WAAW,EAAE,YAFH;QAIV,OAAO,EAAE,YAJC;QAMV,OAAO,EAAE,YANC;QAQV,UAAU,EAAE,oBAAAC,GAAG,EAAI;UACjBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;QACD,CAVS;QAYV,cAAc,EAAE,wBAAAA,GAAG,EAAI;UACrBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,GAA5B;QACD,CAdS;QAgBV,WAAW,EAAE,SAhBH;QAkBV,aAAa,EAAE,uBAAAG,KAAK,EAAI;UACtBF,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,KAA7B;QACD,CApBS;QAsBV,UAAU,EAAE,IAtBF;QAwBV,WAAW,EAAE,qBAAAC,SAAS;UAAA,OAAI,KAAC,KAAD,KAAJ;QAAA,CAxBZ;QA0BV,aAAa,EAAE,IA1BL;QA6BV,kBAAkB,EAAE,IA7BV;QA+BV,QAAQ,EAAE,CA/BA;QAiCV,YAAY,EAAE,IAjCJ;QAmCV,eAAe,EAAE,IAnCP;QAqCV,gBAAgB,EAAE,0BAAAC,aAAa;UAAA,OAAIA,aAAa,EAAjB;QAAA,CArCrB;QAuCV,iBAAiB,EAAE,2BAAAC,QAAQ;UAAA,OAAIA,QAAQ,EAAZ;QAAA,CAvCjB;QAyCV,gBAAgB,EAAE,IAzCR;QA2CV,iBAAiB,EAAE,IA3CT;QA6CV,oCAAoC,EAAE,IA7C5B;QA+CV,YAAY,EAAE,sBAAAC,IAAI,EAAI,CAErB,CAjDS;QAmDV,iBAAiB,EAAE;MAnDT;IADA;EADJ,EAFJ;AA8DH"},"metadata":{},"sourceType":"module"}