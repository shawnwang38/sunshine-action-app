{"ast":null,"code":"import React, { Component } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport AppLoading from 'expo-app-loading';\nimport { useFonts, OpenSans_300Light, OpenSans_300Light_Italic, OpenSans_400Regular, OpenSans_400Regular_Italic, OpenSans_600SemiBold, OpenSans_600SemiBold_Italic, OpenSans_700Bold, OpenSans_700Bold_Italic, OpenSans_800ExtraBold, OpenSans_800ExtraBold_Italic } from '@expo-google-fonts/open-sans';\nimport Calendar from \"./Calendar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction CalendarScreen() {\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      justifyContent: 'flex-start',\n      alignItems: 'stretch'\n    },\n    children: [_jsx(Header, {\n      text: \"Calendar\"\n    }), _jsx(Calendar, {})]\n  });\n}\n\n_jsx(Calendar, {\n  initialDate: '2012-03-01',\n  minDate: '2012-05-10',\n  maxDate: '2012-05-30',\n  onDayPress: function onDayPress(day) {\n    console.log('selected day', day);\n  },\n  onDayLongPress: function onDayLongPress(day) {\n    console.log('selected day', day);\n  },\n  monthFormat: 'yyyy MM',\n  onMonthChange: function onMonthChange(month) {\n    console.log('month changed', month);\n  },\n  hideArrows: true,\n  renderArrow: function renderArrow(direction) {\n    return _jsx(Arrow, {});\n  },\n  hideExtraDays: true,\n  disableMonthChange: true,\n  firstDay: 1,\n  hideDayNames: true,\n  showWeekNumbers: true,\n  onPressArrowLeft: function onPressArrowLeft(subtractMonth) {\n    return subtractMonth();\n  },\n  onPressArrowRight: function onPressArrowRight(addMonth) {\n    return addMonth();\n  },\n  disableArrowLeft: true,\n  disableArrowRight: true,\n  disableAllTouchEventsForDisabledDays: true,\n  renderHeader: function renderHeader(date) {},\n  enableSwipeMonths: true\n});\n\nexport default function Discover() {\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: {\n      flexShrink: 0\n    },\n    children: _jsxs(View, {\n      style: {\n        paddingHorizontal: 20\n      },\n      children: [_jsx(Button, {\n        title: \"EVENTS\"\n      }), _jsx(Button, {\n        title: \"CALENDAR\"\n      })]\n    })\n  });\n}\nvar Tab = createMaterialTopTabNavigator();\n\nfunction myTabs() {\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"black\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Events\"\n        }), _jsx(Tab.Screen, {\n          name: \"Calendar\",\n          component: CalendarScreen\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","Component","NavigationContainer","createNativeStackNavigator","StatusBar","createMaterialTopTabNavigator","SafeAreaProvider","SafeAreaView","Ionicons","AppLoading","useFonts","OpenSans_300Light","OpenSans_300Light_Italic","OpenSans_400Regular","OpenSans_400Regular_Italic","OpenSans_600SemiBold","OpenSans_600SemiBold_Italic","OpenSans_700Bold","OpenSans_700Bold_Italic","OpenSans_800ExtraBold","OpenSans_800ExtraBold_Italic","Calendar","CalendarScreen","flex","justifyContent","alignItems","day","console","log","month","direction","subtractMonth","addMonth","date","Discover","flexShrink","paddingHorizontal","Tab","myTabs"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/src/screens/Discover.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Text, View, ScrollView, Alert, Modal, StyleSheet, Pressable } from \"react-native\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport AppLoading from 'expo-app-loading';\r\nimport {\r\n  useFonts,\r\n  OpenSans_300Light,\r\n  OpenSans_300Light_Italic,\r\n  OpenSans_400Regular,\r\n  OpenSans_400Regular_Italic,\r\n  OpenSans_600SemiBold,\r\n  OpenSans_600SemiBold_Italic,\r\n  OpenSans_700Bold,\r\n  OpenSans_700Bold_Italic,\r\n  OpenSans_800ExtraBold,\r\n  OpenSans_800ExtraBold_Italic \r\n} from '@expo-google-fonts/open-sans'\r\nimport Calendar from \"./Calendar\";\r\n\r\nfunction CalendarScreen() {\r\n    return (\r\n      <SafeAreaView style ={{ flex: 1, justifyContent: 'flex-start', alignItems: 'stretch' }}>\r\n        <Header text = 'Calendar' />\r\n        <Calendar />\r\n      </SafeAreaView>\r\n    )\r\n  }\r\n\r\n<Calendar\r\n  // Initially visible month. Default = now\r\n  initialDate={'2012-03-01'}\r\n  // Minimum date that can be selected, dates before minDate will be grayed out. Default = undefined\r\n  minDate={'2012-05-10'}\r\n  // Maximum date that can be selected, dates after maxDate will be grayed out. Default = undefined\r\n  maxDate={'2012-05-30'}\r\n  // Handler which gets executed on day press. Default = undefined\r\n  onDayPress={day => {\r\n    console.log('selected day', day);\r\n  }}\r\n  // Handler which gets executed on day long press. Default = undefined\r\n  onDayLongPress={day => {\r\n    console.log('selected day', day);\r\n  }}\r\n  // Month format in calendar title. Formatting values: http://arshaw.com/xdate/#Formatting\r\n  monthFormat={'yyyy MM'}\r\n  // Handler which gets executed when visible month changes in calendar. Default = undefined\r\n  onMonthChange={month => {\r\n    console.log('month changed', month);\r\n  }}\r\n  // Hide month navigation arrows. Default = false\r\n  hideArrows={true}\r\n  // Replace default arrows with custom ones (direction can be 'left' or 'right')\r\n  renderArrow={direction => <Arrow />}\r\n  // Do not show days of other months in month page. Default = false\r\n  hideExtraDays={true}\r\n  // If hideArrows = false and hideExtraDays = false do not switch month when tapping on greyed out\r\n  // day from another month that is visible in calendar page. Default = false\r\n  disableMonthChange={true}\r\n  // If firstDay=1 week starts from Monday. Note that dayNames and dayNamesShort should still start from Sunday\r\n  firstDay={1}\r\n  // Hide day names. Default = false\r\n  hideDayNames={true}\r\n  // Show week numbers to the left. Default = false\r\n  showWeekNumbers={true}\r\n  // Handler which gets executed when press arrow icon left. It receive a callback can go back month\r\n  onPressArrowLeft={subtractMonth => subtractMonth()}\r\n  // Handler which gets executed when press arrow icon right. It receive a callback can go next month\r\n  onPressArrowRight={addMonth => addMonth()}\r\n  // Disable left arrow. Default = false\r\n  disableArrowLeft={true}\r\n  // Disable right arrow. Default = false\r\n  disableArrowRight={true}\r\n  // Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates\r\n  disableAllTouchEventsForDisabledDays={true}\r\n  // Replace default month and year title with custom one. the function receive a date as parameter\r\n  renderHeader={date => {\r\n    /*Return JSX*/\r\n  }}\r\n  // Enable the option to swipe between months. Default = false\r\n  enableSwipeMonths={true}\r\n/>\r\n\r\nexport default function Discover() {\r\n    return (\r\n        \r\n        <ScrollView showsVerticalScrollIndicator={false} style={{ flexShrink: 0 }}>\r\n            <View style = {{ paddingHorizontal: 20 }}>\r\n            <Button title=\"EVENTS\"/>\r\n            <Button title=\"CALENDAR\"/>\r\n            </View>\r\n        </ScrollView>\r\n        \r\n    );\r\n}\r\n\r\nconst Tab = createMaterialTopTabNavigator();\r\n\r\nfunction myTabs() {\r\n    return (\r\n    <SafeAreaProvider>\r\n      <StatusBar barStyle='black' />\r\n      <NavigationContainer>\r\n        <Tab.Navigator>\r\n          <Tab.Screen name=\"Events\" />\r\n          <Tab.Screen name=\"Calendar\" component={CalendarScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n    );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}