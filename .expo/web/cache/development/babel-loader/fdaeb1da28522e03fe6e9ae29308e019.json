{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"horizontal\", \"calendarStyle\", \"calendarWidth\", \"testID\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { extractHeaderProps } from \"../componentUpdater\";\nimport { xdateToData, parseDate } from \"../interface\";\nimport { page, sameDate, sameMonth } from \"../dateutils\";\nimport { STATIC_HEADER } from \"../testIDs\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport CalendarListItem from \"./item\";\nimport CalendarHeader from \"../calendar/header/index\";\nimport constants from \"../commons/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CALENDAR_WIDTH = constants.screenWidth;\nvar CALENDAR_HEIGHT = 360;\nvar PAST_SCROLL_RANGE = 50;\nvar FUTURE_SCROLL_RANGE = 50;\n\nvar CalendarList = function (_Component) {\n  _inherits(CalendarList, _Component);\n\n  var _super = _createSuper(CalendarList);\n\n  function CalendarList(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarList);\n\n    _this = _super.call(this, props);\n    _this.list = React.createRef();\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n\n    _this.scrollToMonth = function (m) {\n      var _this$list, _this$list$current;\n\n      var _this$props = _this.props,\n          horizontal = _this$props.horizontal,\n          _this$props$calendarH = _this$props.calendarHeight,\n          calendarHeight = _this$props$calendarH === void 0 ? CALENDAR_HEIGHT : _this$props$calendarH,\n          _this$props$calendarW = _this$props.calendarWidth,\n          calendarWidth = _this$props$calendarW === void 0 ? CALENDAR_WIDTH : _this$props$calendarW,\n          _this$props$pastScrol = _this$props.pastScrollRange,\n          pastScrollRange = _this$props$pastScrol === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol,\n          _this$props$animateSc = _this$props.animateScroll,\n          animateScroll = _this$props$animateSc === void 0 ? false : _this$props$animateSc;\n      var month = parseDate(m);\n      var scrollTo = month || _this.state.openDate;\n      var diffMonths = Math.round(_this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size;\n      (_this$list = _this.list) == null ? void 0 : (_this$list$current = _this$list.current) == null ? void 0 : _this$list$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animateScroll\n      });\n    };\n\n    _this.getItemLayout = function (_, index) {\n      var _this$props2 = _this.props,\n          horizontal = _this$props2.horizontal,\n          _this$props2$calendar = _this$props2.calendarHeight,\n          calendarHeight = _this$props2$calendar === void 0 ? CALENDAR_HEIGHT : _this$props2$calendar,\n          _this$props2$calendar2 = _this$props2.calendarWidth,\n          calendarWidth = _this$props2$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props2$calendar2;\n      var size = horizontal ? calendarWidth : calendarHeight;\n      return {\n        length: size,\n        offset: size * index,\n        index: index\n      };\n    };\n\n    _this.addMonth = function (count) {\n      var day = _this.state.currentMonth.clone().addMonths(count, true);\n\n      if (sameMonth(day, _this.state.currentMonth)) {\n        return;\n      }\n\n      _this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        _this.scrollToMonth(_this.state.currentMonth);\n\n        var currMont = _this.state.currentMonth.clone();\n\n        _this.props.onMonthChange == null ? void 0 : _this.props.onMonthChange(xdateToData(currMont));\n        _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n      });\n    };\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      function rowIsCloseToViewable(index, distance) {\n        for (var i = 0; i < viewableItems.length; i++) {\n          if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      var rowclone = _this.state.rows;\n      var newrows = [];\n      var visibleMonths = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = rowclone[i];\n        var rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n        var _this$props$pastScrol2 = _this.props.pastScrollRange,\n            pastScrollRange = _this$props$pastScrol2 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol2;\n\n        if (rowShouldBeRendered && !rowclone[i].getTime) {\n          val = _this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n        } else if (!rowShouldBeRendered) {\n          val = _this.state.texts[i];\n        }\n\n        newrows.push(val);\n\n        if (rowIsCloseToViewable(i, 0)) {\n          var v = val instanceof XDate ? val : new XDate(val);\n          visibleMonths.push(xdateToData(v));\n        }\n      }\n\n      _this.props.onVisibleMonthsChange == null ? void 0 : _this.props.onVisibleMonthsChange(visibleMonths);\n\n      _this.setState({\n        rows: newrows,\n        currentMonth: parseDate(visibleMonths[0])\n      });\n    };\n\n    _this.renderItem = function (_ref2) {\n      var item = _ref2.item;\n\n      var _this$props3 = _this.props,\n          horizontal = _this$props3.horizontal,\n          calendarStyle = _this$props3.calendarStyle,\n          calendarWidth = _this$props3.calendarWidth,\n          testID = _this$props3.testID,\n          others = _objectWithoutProperties(_this$props3, _excluded);\n\n      return _jsx(CalendarListItem, _objectSpread(_objectSpread({}, others), {}, {\n        markedDates: _this.getMarkedDatesForItem(item),\n        item: item,\n        testID: testID + \"_\" + item,\n        style: calendarStyle,\n        horizontal: horizontal,\n        calendarWidth: horizontal ? calendarWidth : undefined,\n        scrollToMonth: _this.scrollToMonth\n      }));\n    };\n\n    _this.style = styleConstructor(props.theme);\n    var rows = [];\n    var texts = [];\n    var date = parseDate(props.current) || new XDate();\n\n    var _props$pastScrollRang = props.pastScrollRange,\n        _pastScrollRange = _props$pastScrollRang === void 0 ? PAST_SCROLL_RANGE : _props$pastScrollRang,\n        _props$futureScrollRa = props.futureScrollRange,\n        futureScrollRange = _props$futureScrollRa === void 0 ? FUTURE_SCROLL_RANGE : _props$futureScrollRa;\n\n    for (var i = 0; i <= _pastScrollRange + futureScrollRange; i++) {\n      var rangeDate = date.clone().addMonths(i - _pastScrollRange, true);\n      var rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n\n      if (_pastScrollRange - 1 <= i && i <= _pastScrollRange + 1 || !_pastScrollRange && i <= _pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    _this.state = {\n      rows: rows,\n      texts: texts,\n      openDate: date,\n      currentMonth: parseDate(props.current)\n    };\n    return _this;\n  }\n\n  _createClass(CalendarList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevCurrent = parseDate(prevProps.current);\n      var current = parseDate(this.props.current);\n\n      if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n        this.scrollToMonth(current);\n      }\n    }\n  }, {\n    key: \"scrollToDay\",\n    value: function scrollToDay(d, offset, animated) {\n      var _this$list2, _this$list2$current;\n\n      var _this$props4 = this.props,\n          horizontal = _this$props4.horizontal,\n          _this$props4$calendar = _this$props4.calendarHeight,\n          calendarHeight = _this$props4$calendar === void 0 ? CALENDAR_HEIGHT : _this$props4$calendar,\n          _this$props4$calendar2 = _this$props4.calendarWidth,\n          calendarWidth = _this$props4$calendar2 === void 0 ? CALENDAR_WIDTH : _this$props4$calendar2,\n          _this$props4$pastScro = _this$props4.pastScrollRange,\n          pastScrollRange = _this$props4$pastScro === void 0 ? PAST_SCROLL_RANGE : _this$props4$pastScro,\n          firstDay = _this$props4.firstDay;\n      var day = parseDate(d);\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n      var size = horizontal ? calendarWidth : calendarHeight;\n      var scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n\n      if (!horizontal) {\n        var week = 0;\n        var days = page(day, firstDay);\n\n        for (var i = 0; i < days.length; i++) {\n          week = Math.floor(i / 7);\n\n          if (sameDate(days[i], day)) {\n            scrollAmount += 46 * week;\n            break;\n          }\n        }\n      }\n\n      (_this$list2 = this.list) == null ? void 0 : (_this$list2$current = _this$list2.current) == null ? void 0 : _this$list2$current.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"getMonthIndex\",\n    value: function getMonthIndex(month) {\n      var _this$props$pastScrol3 = this.props.pastScrollRange,\n          pastScrollRange = _this$props$pastScrol3 === void 0 ? PAST_SCROLL_RANGE : _this$props$pastScrol3;\n      var diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n      return diffMonths;\n    }\n  }, {\n    key: \"getMarkedDatesForItem\",\n    value: function getMarkedDatesForItem(item) {\n      var markedDates = this.props.markedDates;\n\n      if (markedDates) {\n        if (item && item.getTime) {\n          for (var _i = 0, _Object$entries = Object.entries(markedDates); _i < _Object$entries.length; _i++) {\n            var _ref3 = _Object$entries[_i];\n\n            var _ref4 = _slicedToArray(_ref3, 2);\n\n            var key = _ref4[0];\n            var _ = _ref4[1];\n\n            if (sameMonth(new XDate(key), new XDate(item))) {\n              return markedDates;\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"renderStaticHeader\",\n    value: function renderStaticHeader() {\n      var _this$props5 = this.props,\n          staticHeader = _this$props5.staticHeader,\n          horizontal = _this$props5.horizontal,\n          headerStyle = _this$props5.headerStyle;\n      var useStaticHeader = staticHeader && horizontal;\n      var headerProps = extractHeaderProps(this.props);\n\n      if (useStaticHeader) {\n        return _jsx(CalendarHeader, _objectSpread(_objectSpread({}, headerProps), {}, {\n          testID: STATIC_HEADER,\n          style: [this.style.staticHeader, headerStyle],\n          month: this.state.currentMonth,\n          addMonth: this.addMonth,\n          accessibilityElementsHidden: true,\n          importantForAccessibility: 'no-hide-descendants'\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          style = _this$props6.style,\n          pastScrollRange = _this$props6.pastScrollRange,\n          futureScrollRange = _this$props6.futureScrollRange,\n          horizontal = _this$props6.horizontal,\n          showScrollIndicator = _this$props6.showScrollIndicator;\n      return _jsxs(View, {\n        style: this.style.flatListContainer,\n        children: [_jsx(FlatList, {\n          ref: this.list,\n          style: [this.style.container, style],\n          initialListSize: pastScrollRange + futureScrollRange + 1,\n          data: this.state.rows,\n          renderItem: this.renderItem,\n          getItemLayout: this.getItemLayout,\n          onViewableItemsChanged: this.onViewableItemsChanged,\n          viewabilityConfig: this.viewabilityConfig,\n          initialScrollIndex: this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined,\n          showsVerticalScrollIndicator: showScrollIndicator,\n          showsHorizontalScrollIndicator: horizontal && showScrollIndicator,\n          testID: this.props.testID,\n          onLayout: this.props.onLayout,\n          removeClippedSubviews: this.props.removeClippedSubviews,\n          pagingEnabled: this.props.pagingEnabled,\n          scrollEnabled: this.props.scrollEnabled,\n          scrollsToTop: this.props.scrollsToTop,\n          horizontal: this.props.horizontal,\n          keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n          keyExtractor: this.props.keyExtractor,\n          onEndReachedThreshold: this.props.onEndReachedThreshold,\n          onEndReached: this.props.onEndReached,\n          nestedScrollEnabled: this.props.nestedScrollEnabled\n        }), this.renderStaticHeader()]\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(_, prevState) {\n      var rowClone = prevState.rows;\n      var newRows = [];\n\n      for (var i = 0; i < rowClone.length; i++) {\n        var val = prevState.texts[i];\n\n        if (rowClone[i].getTime) {\n          val = rowClone[i].clone();\n          val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n        }\n\n        newRows.push(val);\n      }\n\n      return {\n        rows: newRows\n      };\n    }\n  }]);\n\n  return CalendarList;\n}(Component);\n\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, Calendar.propTypes), {}, {\n  pastScrollRange: PropTypes.number,\n  futureScrollRange: PropTypes.number,\n  calendarWidth: PropTypes.number,\n  calendarHeight: PropTypes.number,\n  calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticHeader: PropTypes.bool,\n  showScrollIndicator: PropTypes.bool,\n  animateScroll: PropTypes.bool,\n  scrollEnabled: PropTypes.bool,\n  scrollsToTop: PropTypes.bool,\n  pagingEnabled: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  keyExtractor: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  onEndReached: PropTypes.func,\n  nestedScrollEnabled: PropTypes.bool\n});\nCalendarList.defaultProps = {\n  calendarWidth: CALENDAR_WIDTH,\n  calendarHeight: CALENDAR_HEIGHT,\n  pastScrollRange: PAST_SCROLL_RANGE,\n  futureScrollRange: FUTURE_SCROLL_RANGE,\n  showScrollIndicator: false,\n  horizontal: false,\n  scrollsToTop: false,\n  scrollEnabled: true,\n  removeClippedSubviews: constants.isAndroid,\n  keyExtractor: function keyExtractor(_, index) {\n    return String(index);\n  },\n  nestedScrollEnabled: true\n};\nexport default CalendarList;","map":{"version":3,"names":["PropTypes","XDate","React","Component","extractHeaderProps","xdateToData","parseDate","page","sameDate","sameMonth","STATIC_HEADER","styleConstructor","Calendar","CalendarListItem","CalendarHeader","constants","CALENDAR_WIDTH","screenWidth","CALENDAR_HEIGHT","PAST_SCROLL_RANGE","FUTURE_SCROLL_RANGE","CalendarList","props","list","createRef","viewabilityConfig","itemVisiblePercentThreshold","scrollToMonth","m","horizontal","calendarHeight","calendarWidth","pastScrollRange","animateScroll","month","scrollTo","state","openDate","diffMonths","Math","round","clone","setDate","size","scrollAmount","current","scrollToOffset","offset","animated","getItemLayout","_","index","length","addMonth","count","day","currentMonth","addMonths","setState","currMont","onMonthChange","onVisibleMonthsChange","onViewableItemsChanged","viewableItems","rowIsCloseToViewable","distance","i","abs","parseInt","rowclone","rows","newrows","visibleMonths","val","rowShouldBeRendered","getTime","texts","push","v","renderItem","item","calendarStyle","testID","others","getMarkedDatesForItem","undefined","style","theme","date","futureScrollRange","rangeDate","rangeDateStr","toString","prevProps","prevCurrent","d","firstDay","week","days","floor","markedDates","Object","entries","key","staticHeader","headerStyle","useStaticHeader","headerProps","showScrollIndicator","flatListContainer","container","getMonthIndex","onLayout","removeClippedSubviews","pagingEnabled","scrollEnabled","scrollsToTop","keyboardShouldPersistTaps","keyExtractor","onEndReachedThreshold","onEndReached","nestedScrollEnabled","renderStaticHeader","prevState","rowClone","newRows","propBump","displayName","propTypes","number","oneOfType","object","array","bool","oneOf","func","defaultProps","isAndroid","String"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/node_modules/react-native-calendars/src/calendar-list/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { extractHeaderProps } from '../componentUpdater';\nimport { xdateToData, parseDate } from '../interface';\nimport { page, sameDate, sameMonth } from '../dateutils';\n// @ts-expect-error\nimport { STATIC_HEADER } from '../testIDs';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport constants from '../commons/constants';\nconst CALENDAR_WIDTH = constants.screenWidth;\nconst CALENDAR_HEIGHT = 360;\nconst PAST_SCROLL_RANGE = 50;\nconst FUTURE_SCROLL_RANGE = 50;\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar-list.gif\n */\nclass CalendarList extends Component {\n    static displayName = 'CalendarList';\n    static propTypes = {\n        ...Calendar.propTypes,\n        pastScrollRange: PropTypes.number,\n        futureScrollRange: PropTypes.number,\n        calendarWidth: PropTypes.number,\n        calendarHeight: PropTypes.number,\n        calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n        staticHeader: PropTypes.bool,\n        showScrollIndicator: PropTypes.bool,\n        animateScroll: PropTypes.bool,\n        scrollEnabled: PropTypes.bool,\n        scrollsToTop: PropTypes.bool,\n        pagingEnabled: PropTypes.bool,\n        horizontal: PropTypes.bool,\n        keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n        keyExtractor: PropTypes.func,\n        onEndReachedThreshold: PropTypes.number,\n        /** Called once when the scroll position gets within onEndReachedThreshold */\n        onEndReached: PropTypes.func,\n        /** Enables nested scrolling for Android API level 21+ */\n        nestedScrollEnabled: PropTypes.bool\n    };\n    static defaultProps = {\n        calendarWidth: CALENDAR_WIDTH,\n        calendarHeight: CALENDAR_HEIGHT,\n        pastScrollRange: PAST_SCROLL_RANGE,\n        futureScrollRange: FUTURE_SCROLL_RANGE,\n        showScrollIndicator: false,\n        horizontal: false,\n        scrollsToTop: false,\n        scrollEnabled: true,\n        removeClippedSubviews: constants.isAndroid,\n        keyExtractor: (_, index) => String(index),\n        nestedScrollEnabled: true\n    };\n    style;\n    list = React.createRef();\n    viewabilityConfig = {\n        itemVisiblePercentThreshold: 20\n    };\n    constructor(props) {\n        super(props);\n        this.style = styleConstructor(props.theme);\n        const rows = [];\n        const texts = [];\n        const date = parseDate(props.current) || new XDate();\n        const { pastScrollRange = PAST_SCROLL_RANGE, futureScrollRange = FUTURE_SCROLL_RANGE } = props;\n        for (let i = 0; i <= pastScrollRange + futureScrollRange; i++) {\n            const rangeDate = date.clone().addMonths(i - pastScrollRange, true);\n            const rangeDateStr = rangeDate.toString('MMM yyyy');\n            texts.push(rangeDateStr);\n            /*\n             * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n             * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n             */\n            if ((pastScrollRange - 1 <= i && i <= pastScrollRange + 1) ||\n                (!pastScrollRange && i <= pastScrollRange + 2)) {\n                rows.push(rangeDate);\n            }\n            else {\n                rows.push(rangeDateStr);\n            }\n        }\n        this.state = {\n            rows,\n            texts,\n            openDate: date,\n            currentMonth: parseDate(props.current)\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const prevCurrent = parseDate(prevProps.current);\n        const current = parseDate(this.props.current);\n        if (current && prevCurrent && current.getTime() !== prevCurrent.getTime()) {\n            this.scrollToMonth(current);\n        }\n    }\n    static getDerivedStateFromProps(_, prevState) {\n        const rowClone = prevState.rows;\n        const newRows = [];\n        for (let i = 0; i < rowClone.length; i++) {\n            let val = prevState.texts[i];\n            // @ts-expect-error\n            if (rowClone[i].getTime) {\n                val = rowClone[i].clone();\n                // @ts-expect-error\n                val.propBump = rowClone[i].propBump ? rowClone[i].propBump + 1 : 1;\n            }\n            newRows.push(val);\n        }\n        return { rows: newRows };\n    }\n    scrollToDay(d, offset, animated) {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, firstDay } = this.props;\n        const day = parseDate(d);\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        let scrollAmount = size * pastScrollRange + diffMonths * size + (offset || 0);\n        if (!horizontal) {\n            let week = 0;\n            const days = page(day, firstDay);\n            for (let i = 0; i < days.length; i++) {\n                week = Math.floor(i / 7);\n                if (sameDate(days[i], day)) {\n                    scrollAmount += 46 * week;\n                    break;\n                }\n            }\n        }\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated });\n    }\n    scrollToMonth = (m) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH, pastScrollRange = PAST_SCROLL_RANGE, animateScroll = false } = this.props;\n        const month = parseDate(m);\n        const scrollTo = month || this.state.openDate;\n        const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n        const size = horizontal ? calendarWidth : calendarHeight;\n        const scrollAmount = size * pastScrollRange + diffMonths * size;\n        this.list?.current?.scrollToOffset({ offset: scrollAmount, animated: animateScroll });\n    };\n    getItemLayout = (_, index) => {\n        const { horizontal, calendarHeight = CALENDAR_HEIGHT, calendarWidth = CALENDAR_WIDTH } = this.props;\n        const size = horizontal ? calendarWidth : calendarHeight;\n        return {\n            length: size,\n            offset: size * index,\n            index\n        };\n    };\n    getMonthIndex(month) {\n        const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n        const diffMonths = this.state.openDate.diffMonths(month) + pastScrollRange;\n        return diffMonths;\n    }\n    addMonth = (count) => {\n        const day = this.state.currentMonth.clone().addMonths(count, true);\n        if (sameMonth(day, this.state.currentMonth)) {\n            return;\n        }\n        this.setState({ currentMonth: day.clone() }, () => {\n            this.scrollToMonth(this.state.currentMonth);\n            const currMont = this.state.currentMonth.clone();\n            this.props.onMonthChange?.(xdateToData(currMont));\n            this.props.onVisibleMonthsChange?.([xdateToData(currMont)]);\n        });\n    };\n    onViewableItemsChanged = ({ viewableItems }) => {\n        function rowIsCloseToViewable(index, distance) {\n            for (let i = 0; i < viewableItems.length; i++) {\n                if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        const rowclone = this.state.rows;\n        const newrows = [];\n        const visibleMonths = [];\n        for (let i = 0; i < rowclone.length; i++) {\n            let val = rowclone[i];\n            const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n            const { pastScrollRange = PAST_SCROLL_RANGE } = this.props;\n            if (rowShouldBeRendered && !rowclone[i].getTime) {\n                val = this.state.openDate.clone().addMonths(i - pastScrollRange, true);\n            }\n            else if (!rowShouldBeRendered) {\n                val = this.state.texts[i];\n            }\n            newrows.push(val);\n            if (rowIsCloseToViewable(i, 0)) {\n                const v = (val instanceof XDate) ? val : new XDate(val);\n                visibleMonths.push(xdateToData(v));\n            }\n        }\n        this.props.onVisibleMonthsChange?.(visibleMonths);\n        this.setState({\n            // @ts-expect-error\n            rows: newrows,\n            currentMonth: parseDate(visibleMonths[0])\n        });\n    };\n    getMarkedDatesForItem(item) {\n        const { markedDates } = this.props;\n        if (markedDates) {\n            if (item && item.getTime) {\n                for (const [key, _] of Object.entries(markedDates)) {\n                    if (sameMonth(new XDate(key), new XDate(item))) {\n                        return markedDates;\n                    }\n                }\n            }\n        }\n    }\n    renderItem = ({ item }) => {\n        const { horizontal, calendarStyle, calendarWidth, testID, ...others } = this.props;\n        // NOTE: now only 'item' and 'markedDates' change for the 3 calendar (item.getTime) items\n        return (<CalendarListItem {...others} markedDates={this.getMarkedDatesForItem(item)} item={item} testID={`${testID}_${item}`} style={calendarStyle} horizontal={horizontal} calendarWidth={horizontal ? calendarWidth : undefined} scrollToMonth={this.scrollToMonth}/>);\n    };\n    renderStaticHeader() {\n        const { staticHeader, horizontal, headerStyle } = this.props;\n        const useStaticHeader = staticHeader && horizontal;\n        const headerProps = extractHeaderProps(this.props);\n        if (useStaticHeader) {\n            return (<CalendarHeader {...headerProps} testID={STATIC_HEADER} style={[this.style.staticHeader, headerStyle]} month={this.state.currentMonth} addMonth={this.addMonth} accessibilityElementsHidden={true} // iOS\n             importantForAccessibility={'no-hide-descendants'} // Android\n            />);\n        }\n    }\n    render() {\n        const { style, pastScrollRange, futureScrollRange, horizontal, showScrollIndicator } = this.props;\n        return (<View style={this.style.flatListContainer}>\n        <FlatList ref={this.list} style={[this.style.container, style]} \n        // @ts-expect-error\n        initialListSize={pastScrollRange + futureScrollRange + 1} // ListView deprecated\n         data={this.state.rows} renderItem={this.renderItem} getItemLayout={this.getItemLayout} onViewableItemsChanged={this.onViewableItemsChanged} viewabilityConfig={this.viewabilityConfig} initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : undefined} showsVerticalScrollIndicator={showScrollIndicator} showsHorizontalScrollIndicator={horizontal && showScrollIndicator} testID={this.props.testID} onLayout={this.props.onLayout} removeClippedSubviews={this.props.removeClippedSubviews} pagingEnabled={this.props.pagingEnabled} scrollEnabled={this.props.scrollEnabled} scrollsToTop={this.props.scrollsToTop} horizontal={this.props.horizontal} keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps} keyExtractor={this.props.keyExtractor} onEndReachedThreshold={this.props.onEndReachedThreshold} onEndReached={this.props.onEndReached} nestedScrollEnabled={this.props.nestedScrollEnabled}/>\n        {this.renderStaticHeader()}\n      </View>);\n    }\n}\nexport default CalendarList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}