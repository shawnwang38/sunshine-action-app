{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ModalDisplay = function (_Component) {\n  _inherits(ModalDisplay, _Component);\n\n  var _super = _createSuper(ModalDisplay);\n\n  function ModalDisplay() {\n    var _this;\n\n    _classCallCheck(this, ModalDisplay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      modalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(ModalDisplay, [{\n    key: \"toggleModal\",\n    value: function toggleModal(visible) {\n      this.setState({\n        modalVisible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: StyleSheet.container,\n        children: [_jsx(Modal, {\n          animationType: \"slide\",\n          transparent: false,\n          visible: this.state.modalVisible,\n          onRequestClose: function onRequestClose() {\n            console.log(\"Modal has been closed.\");\n          },\n          children: _jsxs(View, {\n            style: styles.modal,\n            children: [_jsx(Text, {\n              style: styles.text,\n              children: this.props.text\n            }), _jsx(TouchableHighlight, {\n              onPress: function onPress() {\n                _this2.toggleModal(!_this2.state.modalVisible);\n              },\n              children: _jsx(Text, {\n                style: styles.text,\n                children: \"Close\"\n              })\n            })]\n          })\n        }), _jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            _this2.toggleModal(true);\n          },\n          children: _jsx(Image, {\n            source: this.props.img,\n            style: {\n              height: 210,\n              width: 150\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return ModalDisplay;\n}(Component);\n\nexport default ModalDisplay;\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#FFF7E3',\n    padding: 100\n  },\n  modal: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#FFF7E3',\n    padding: 50\n  },\n  text: {\n    color: '#3f2949',\n    marginTop: 10\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  }\n});","map":{"version":3,"names":["React","Component","ModalDisplay","state","modalVisible","visible","setState","StyleSheet","container","console","log","styles","modal","text","props","toggleModal","img","height","width","create","alignItems","backgroundColor","padding","flex","color","marginTop","centeredView","justifyContent","modalView","margin","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["C:/Users/221bb/OneDrive/Desktop/sunshineaction/sunshine-action-app/src/screens/ModalDisplay.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Text, Button, TouchableHighlight, Image, View, StyleSheet} from \"react-native\";\r\n\r\n\r\n//this is a basic modal component which takes in text and img (image is the button that when clicked opens the modal) or button (a button that will display the entered text, and when clicked opens the modal)\r\n\r\nclass ModalDisplay extends Component {\r\n    state = {\r\n        modalVisible: false,\r\n    }\r\n    toggleModal(visible) {\r\n        this.setState({ modalVisible: visible });\r\n    }\r\n    render() {\r\n        return (\r\n            <View style = {StyleSheet.container}>\r\n                <Modal animationType = {\"slide\"} transparent = {false}\r\n                    visible = {this.state.modalVisible}\r\n                    onRequestClose = {() => { console.log(\"Modal has been closed.\") } }>\r\n                        <View style = {styles.modal}>\r\n                            <Text style = {styles.text}>{this.props.text}</Text>\r\n                            <TouchableHighlight onPress = {() => {\r\n                                this.toggleModal(!this.state.modalVisible)}}>\r\n                                    <Text style = {styles.text}>Close</Text>\r\n                            </TouchableHighlight>\r\n                        </View>\r\n                    </Modal>\r\n                    \r\n                    \r\n                    <TouchableHighlight onPress = {() => {this.toggleModal(true)}}>\r\n                        <Image source={this.props.img} style={{height: 210, width: 150}} />\r\n                        \r\n                    </TouchableHighlight>\r\n                    \r\n            </View>\r\n        )\r\n    }\r\n}\r\nexport default ModalDisplay\r\n\r\n\r\n\r\nconst styles = StyleSheet.create ({\r\n    container: {\r\n       alignItems: 'center',\r\n       backgroundColor: '#FFF7E3',\r\n       padding: 100\r\n    },\r\n    modal: {\r\n       flex: 1,\r\n       alignItems: 'center',\r\n       backgroundColor: '#FFF7E3',\r\n       padding: 50\r\n    },\r\n    text: {\r\n       color: '#3f2949',\r\n       marginTop: 10\r\n    },\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: 22\r\n      },\r\n      modalView: {\r\n        margin: 20,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#000\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n      },\r\n })\r\n"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;;IAMMC,Y;;;;;;;;;;;;;;;UACFC,K,GAAQ;MACJC,YAAY,EAAE;IADV,C;;;;;;WAGR,qBAAYC,OAAZ,EAAqB;MACjB,KAAKC,QAAL,CAAc;QAAEF,YAAY,EAAEC;MAAhB,CAAd;IACH;;;WACD,kBAAS;MAAA;;MACL,OACI,MAAC,IAAD;QAAM,KAAK,EAAIE,UAAU,CAACC,SAA1B;QAAA,WACI,KAAC,KAAD;UAAO,aAAa,EAAI,OAAxB;UAAiC,WAAW,EAAI,KAAhD;UACI,OAAO,EAAI,KAAKL,KAAL,CAAWC,YAD1B;UAEI,cAAc,EAAI,0BAAM;YAAEK,OAAO,CAACC,GAAR,CAAY,wBAAZ;UAAuC,CAFrE;UAAA,UAGQ,MAAC,IAAD;YAAM,KAAK,EAAIC,MAAM,CAACC,KAAtB;YAAA,WACI,KAAC,IAAD;cAAM,KAAK,EAAID,MAAM,CAACE,IAAtB;cAAA,UAA6B,KAAKC,KAAL,CAAWD;YAAxC,EADJ,EAEI,KAAC,kBAAD;cAAoB,OAAO,EAAI,mBAAM;gBACjC,MAAI,CAACE,WAAL,CAAiB,CAAC,MAAI,CAACZ,KAAL,CAAWC,YAA7B;cAA2C,CAD/C;cAAA,UAEQ,KAAC,IAAD;gBAAM,KAAK,EAAIO,MAAM,CAACE,IAAtB;gBAAA;cAAA;YAFR,EAFJ;UAAA;QAHR,EADJ,EAcQ,KAAC,kBAAD;UAAoB,OAAO,EAAI,mBAAM;YAAC,MAAI,CAACE,WAAL,CAAiB,IAAjB;UAAuB,CAA7D;UAAA,UACI,KAAC,KAAD;YAAO,MAAM,EAAE,KAAKD,KAAL,CAAWE,GAA1B;YAA+B,KAAK,EAAE;cAACC,MAAM,EAAE,GAAT;cAAcC,KAAK,EAAE;YAArB;UAAtC;QADJ,EAdR;MAAA,EADJ;IAsBH;;;;EA9BsBjB,S;;AAgC3B,eAAeC,YAAf;AAIA,IAAMS,MAAM,GAAGJ,UAAU,CAACY,MAAX,CAAmB;EAC9BX,SAAS,EAAE;IACRY,UAAU,EAAE,QADJ;IAERC,eAAe,EAAE,SAFT;IAGRC,OAAO,EAAE;EAHD,CADmB;EAM9BV,KAAK,EAAE;IACJW,IAAI,EAAE,CADF;IAEJH,UAAU,EAAE,QAFR;IAGJC,eAAe,EAAE,SAHb;IAIJC,OAAO,EAAE;EAJL,CANuB;EAY9BT,IAAI,EAAE;IACHW,KAAK,EAAE,SADJ;IAEHC,SAAS,EAAE;EAFR,CAZwB;EAgB9BC,YAAY,EAAE;IACVH,IAAI,EAAE,CADI;IAEVI,cAAc,EAAE,QAFN;IAGVP,UAAU,EAAE,QAHF;IAIVK,SAAS,EAAE;EAJD,CAhBgB;EAsB5BG,SAAS,EAAE;IACTC,MAAM,EAAE,EADC;IAETR,eAAe,EAAE,OAFR;IAGTS,YAAY,EAAE,EAHL;IAITR,OAAO,EAAE,EAJA;IAKTF,UAAU,EAAE,QALH;IAMTW,WAAW,EAAE,MANJ;IAOTC,YAAY,EAAE;MACZd,KAAK,EAAE,CADK;MAEZD,MAAM,EAAE;IAFI,CAPL;IAWTgB,aAAa,EAAE,IAXN;IAYTC,YAAY,EAAE,CAZL;IAaTC,SAAS,EAAE;EAbF;AAtBiB,CAAnB,CAAf"},"metadata":{},"sourceType":"module"}